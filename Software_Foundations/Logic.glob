DIGEST 0ce6cef35f8e9af936c54ffc515e814b
FLogic
R45:51 Tactics <> <> lib
R939:941 Coq.Init.Logic <> :type_scope:x_'='_x not
R981:983 Coq.Init.Datatypes <> nat ind
R991:993 Coq.Init.Logic <> :type_scope:x_'='_x not
R987:989 Basics <> :nat_scope:x_'+'_x not
R986:986 Logic <> n var
R990:990 Logic <> m var
R995:997 Basics <> :nat_scope:x_'+'_x not
R994:994 Logic <> m var
R998:998 Logic <> n var
R1238:1240 Coq.Init.Datatypes <> nat ind
R1244:1246 Coq.Init.Logic <> :type_scope:x_'='_x not
R1243:1243 Logic <> n var
R1274:1276 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1606:1618 <> plus_2_2_is_4
R1629:1631 Coq.Init.Logic <> :type_scope:x_'='_x not
R1625:1627 Basics <> :nat_scope:x_'+'_x not
def 1869:1877 <> plus_fact
R1896:1898 Coq.Init.Logic <> :type_scope:x_'='_x not
R1892:1894 Basics <> :nat_scope:x_'+'_x not
R1908:1916 Logic <> plus_fact def
prf 2101:2117 <> plus_fact_is_true
R2123:2131 Logic <> plus_fact def
def 2448:2455 <> is_three
R2462:2464 Coq.Init.Datatypes <> nat ind
R2480:2482 Coq.Init.Logic <> :type_scope:x_'='_x not
R2479:2479 Logic <> n var
R2492:2499 Logic <> is_three def
def 2754:2762 <> injective
R2780:2780 Logic <> B var
R2775:2775 Logic <> A var
R2801:2801 Logic <> A var
R2818:2820 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2817 Logic <> x var
R2821:2821 Logic <> y var
R2807:2809 Coq.Init.Logic <> :type_scope:x_'='_x not
R2804:2804 Logic <> f var
R2806:2806 Logic <> x var
R2810:2810 Logic <> f var
R2812:2812 Logic <> y var
prf 2831:2838 <> succ_inj
R2842:2850 Logic <> injective def
R2852:2852 Coq.Init.Datatypes <> S constr
R3223:3224 Coq.Init.Logic <> eq ind
def 3816:3826 <> and_example
R3839:3842 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3835:3837 Coq.Init.Logic <> :type_scope:x_'='_x not
R3831:3833 Basics <> :nat_scope:x_'+'_x not
R3848:3850 Coq.Init.Logic <> :type_scope:x_'='_x not
R3844:3846 Basics <> :nat_scope:x_'*'_x not
prf 4182:4190 <> and_intro
R4224:4227 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4223:4223 Logic <> A var
R4228:4228 Logic <> B var
R4218:4218 Logic <> B var
R4213:4213 Logic <> A var
def 4793:4804 <> and_example'
R4817:4820 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4813:4815 Coq.Init.Logic <> :type_scope:x_'='_x not
R4809:4811 Basics <> :nat_scope:x_'+'_x not
R4826:4828 Coq.Init.Logic <> :type_scope:x_'='_x not
R4822:4824 Basics <> :nat_scope:x_'*'_x not
R4847:4855 Logic <> and_intro thm
R4847:4855 Logic <> and_intro thm
def 4984:4995 <> and_exercise
R5014:5016 Coq.Init.Datatypes <> nat ind
R5037:5040 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5033:5035 Coq.Init.Logic <> :type_scope:x_'='_x not
R5032:5032 Logic <> n var
R5042:5044 Coq.Init.Logic <> :type_scope:x_'='_x not
R5041:5041 Logic <> m var
R5024:5026 Coq.Init.Logic <> :type_scope:x_'='_x not
R5020:5022 Basics <> :nat_scope:x_'+'_x not
R5019:5019 Logic <> n var
R5023:5023 Logic <> m var
R5190:5198 Induction <> plus_n_Sm thm
R5190:5198 Induction <> plus_n_Sm thm
prf 5696:5707 <> and_example2
R5726:5728 Coq.Init.Datatypes <> nat ind
R5754:5756 Coq.Init.Logic <> :type_scope:x_'='_x not
R5750:5752 Basics <> :nat_scope:x_'+'_x not
R5749:5749 Logic <> n var
R5753:5753 Logic <> m var
R5736:5739 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5732:5734 Coq.Init.Logic <> :type_scope:x_'='_x not
R5731:5731 Logic <> n var
R5741:5743 Coq.Init.Logic <> :type_scope:x_'='_x not
R5740:5740 Logic <> m var
prf 5977:5989 <> and_example2'
R6008:6010 Coq.Init.Datatypes <> nat ind
R6036:6038 Coq.Init.Logic <> :type_scope:x_'='_x not
R6032:6034 Basics <> :nat_scope:x_'+'_x not
R6031:6031 Logic <> n var
R6035:6035 Logic <> m var
R6018:6021 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6014:6016 Coq.Init.Logic <> :type_scope:x_'='_x not
R6013:6013 Logic <> n var
R6023:6025 Coq.Init.Logic <> :type_scope:x_'='_x not
R6022:6022 Logic <> m var
prf 6317:6330 <> and_example2''
R6349:6351 Coq.Init.Datatypes <> nat ind
R6377:6379 Coq.Init.Logic <> :type_scope:x_'='_x not
R6373:6375 Basics <> :nat_scope:x_'+'_x not
R6372:6372 Logic <> n var
R6376:6376 Logic <> m var
R6364:6366 Coq.Init.Logic <> :type_scope:x_'='_x not
R6363:6363 Logic <> m var
R6355:6357 Coq.Init.Logic <> :type_scope:x_'='_x not
R6354:6354 Logic <> n var
prf 6731:6742 <> and_example3
R6761:6763 Coq.Init.Datatypes <> nat ind
R6784:6786 Coq.Init.Logic <> :type_scope:x_'='_x not
R6780:6782 Basics <> :nat_scope:x_'*'_x not
R6779:6779 Logic <> n var
R6783:6783 Logic <> m var
R6771:6773 Coq.Init.Logic <> :type_scope:x_'='_x not
R6767:6769 Basics <> :nat_scope:x_'+'_x not
R6766:6766 Logic <> n var
R6770:6770 Logic <> m var
R6833:6836 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6829:6831 Coq.Init.Logic <> :type_scope:x_'='_x not
R6838:6840 Coq.Init.Logic <> :type_scope:x_'='_x not
R6833:6836 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6829:6831 Coq.Init.Logic <> :type_scope:x_'='_x not
R6838:6840 Coq.Init.Logic <> :type_scope:x_'='_x not
R6855:6866 Logic <> and_exercise def
R6855:6866 Logic <> and_exercise def
prf 7129:7133 <> proj1
R7168:7168 Logic <> P var
R7159:7162 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7158:7158 Logic <> P var
R7163:7163 Logic <> Q var
prf 7273:7277 <> proj2
R7312:7312 Logic <> Q var
R7303:7306 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7302:7302 Logic <> P var
R7307:7307 Logic <> Q var
prf 7607:7616 <> and_commut
R7652:7655 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7651:7651 Logic <> Q var
R7656:7656 Logic <> P var
R7642:7645 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7641:7641 Logic <> P var
R7646:7646 Logic <> Q var
prf 8029:8037 <> and_assoc
R8081:8081 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8088:8092 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8083:8086 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8082:8082 Logic <> P var
R8087:8087 Logic <> Q var
R8093:8093 Logic <> R var
R8065:8069 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8076:8076 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8064:8064 Logic <> P var
R8071:8074 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8070:8070 Logic <> Q var
R8075:8075 Logic <> R var
R8398:8400 Coq.Init.Logic <> and ind
prf 8960:8969 <> or_example
R8988:8990 Coq.Init.Datatypes <> nat ind
R9016:9018 Coq.Init.Logic <> :type_scope:x_'='_x not
R9012:9014 Basics <> :nat_scope:x_'*'_x not
R9011:9011 Logic <> n var
R9015:9015 Logic <> m var
R8998:9001 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8994:8996 Coq.Init.Logic <> :type_scope:x_'='_x not
R8993:8993 Logic <> n var
R9003:9005 Coq.Init.Logic <> :type_scope:x_'='_x not
R9002:9002 Logic <> m var
R9233:9240 Coq.Init.Peano <> mult_n_O thm
R9233:9240 Coq.Init.Peano <> mult_n_O thm
prf 9989:9996 <> or_intro
R10025:10028 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10024:10024 Logic <> A var
R10029:10029 Logic <> B var
R10019:10019 Logic <> A var
prf 10190:10201 <> zero_or_succ
R10218:10220 Coq.Init.Datatypes <> nat ind
R10228:10231 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10224:10226 Coq.Init.Logic <> :type_scope:x_'='_x not
R10223:10223 Logic <> n var
R10233:10235 Coq.Init.Logic <> :type_scope:x_'='_x not
R10232:10232 Logic <> n var
R10236:10236 Coq.Init.Datatypes <> S constr
R10239:10242 Coq.Init.Peano <> pred def
R10244:10244 Logic <> n var
prf 10371:10379 <> mult_eq_0
R10415:10418 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10411:10413 Coq.Init.Logic <> :type_scope:x_'='_x not
R10410:10410 Logic <> n var
R10420:10422 Coq.Init.Logic <> :type_scope:x_'='_x not
R10419:10419 Logic <> m var
R10402:10404 Coq.Init.Logic <> :type_scope:x_'='_x not
R10398:10400 Basics <> :nat_scope:x_'*'_x not
R10397:10397 Logic <> n var
R10401:10401 Logic <> m var
prf 10617:10625 <> or_commut
R10662:10665 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10661:10661 Logic <> Q var
R10666:10666 Logic <> P var
R10651:10654 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10650:10650 Logic <> P var
R10655:10655 Logic <> Q var
mod 11722:11726 <> MyNot
def 11741:11743 MyNot not
R11762:11766 Coq.Init.Logic <> False ind
R11757:11757 Logic <> P var
R11789:11791 Logic MyNot not def
not 11779 MyNot :type_scope:'~'_x
R11817:11819 Logic MyNot not def
R11851:11855 Logic <> <> mod
prf 12061:12078 <> ex_falso_quodlibet
R12110:12110 Logic <> P var
R12101:12105 Coq.Init.Logic <> False ind
prf 12520:12538 <> not_implies_our_not
R12591:12591 Logic <> Q var
R12586:12586 Logic <> P var
R12561:12562 Coq.Init.Logic <> :type_scope:'~'_x not
R12563:12563 Logic <> P var
prf 12760:12771 <> zero_not_one
R12775:12776 Coq.Init.Logic <> :type_scope:'~'_x not
R12782:12782 Coq.Init.Logic <> :type_scope:'~'_x not
R12778:12780 Coq.Init.Logic <> :type_scope:x_'='_x not
R12941:12944 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12974:12986 <> zero_not_one'
R12991:12994 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13400:13408 <> not_False
R13414:13415 Coq.Init.Logic <> :type_scope:'~'_x not
R13416:13420 Coq.Init.Logic <> False ind
R13439:13441 Coq.Init.Logic <> not def
prf 13480:13509 <> contradiction_implies_anything
R13547:13547 Logic <> Q var
R13536:13539 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13535:13535 Logic <> P var
R13540:13540 Coq.Init.Logic <> :type_scope:'~'_x not
R13541:13541 Logic <> P var
R13611:13613 Coq.Init.Logic <> not def
prf 13670:13679 <> double_neg
R13707:13707 Coq.Init.Logic <> :type_scope:'~'_x not
R13708:13708 Coq.Init.Logic <> :type_scope:'~'_x not
R13709:13709 Logic <> P var
R13702:13702 Logic <> P var
R13764:13766 Coq.Init.Logic <> not def
prf 14090:14103 <> contrapositive
R14147:14147 Coq.Init.Logic <> :type_scope:'~'_x not
R14148:14148 Logic <> P var
R14141:14141 Coq.Init.Logic <> :type_scope:'~'_x not
R14142:14142 Logic <> Q var
R14134:14134 Logic <> Q var
R14129:14129 Logic <> P var
prf 14289:14311 <> not_both_true_and_false
R14334:14336 Coq.Init.Logic <> :type_scope:'~'_x not
R14344:14344 Coq.Init.Logic <> :type_scope:'~'_x not
R14338:14341 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14337:14337 Logic <> P var
R14342:14342 Coq.Init.Logic <> :type_scope:'~'_x not
R14343:14343 Logic <> P var
R14363:14365 Coq.Init.Logic <> not def
prf 15099:15115 <> not_true_is_false
R15130:15133 Basics <> bool ind
R15152:15154 Coq.Init.Logic <> :type_scope:x_'='_x not
R15151:15151 Logic <> b var
R15155:15159 Basics <> false constr
R15139:15142 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15138:15138 Logic <> b var
R15143:15146 Basics <> true constr
R15214:15216 Coq.Init.Logic <> not def
R15234:15251 Logic <> ex_falso_quodlibet thm
R15234:15251 Logic <> ex_falso_quodlibet thm
prf 15462:15479 <> not_true_is_false'
R15494:15497 Basics <> bool ind
R15516:15518 Coq.Init.Logic <> :type_scope:x_'='_x not
R15515:15515 Logic <> b var
R15519:15523 Basics <> false constr
R15503:15506 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15502:15502 Logic <> b var
R15507:15510 Basics <> true constr
R15579:15581 Coq.Init.Logic <> not def
prf 15958:15969 <> True_is_true
R15973:15976 Coq.Init.Logic <> True ind
R15992:15992 Coq.Init.Logic <> I constr
R15992:15992 Coq.Init.Logic <> I constr
mod 16674:16678 <> MyIff
def 16693:16695 MyIff iff
R16713:16713 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16720:16725 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16732:16732 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16719:16719 Logic <> Q var
R16714:16714 Logic <> P var
R16731:16731 Logic <> P var
R16726:16726 Logic <> Q var
R16759:16761 Logic MyIff iff def
not 16745 MyIff :type_scope:x_'<->'_x
R16863:16867 Logic <> <> mod
prf 16879:16885 <> iff_sym
R16925:16929 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16924:16924 Logic <> Q var
R16930:16930 Logic <> P var
R16912:16916 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16911:16911 Logic <> P var
R16917:16917 Logic <> Q var
prf 17059:17076 <> not_true_iff_false
R17101:17105 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17093:17096 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17092:17092 Logic <> b var
R17097:17100 Basics <> true constr
R17107:17109 Coq.Init.Logic <> :type_scope:x_'='_x not
R17106:17106 Logic <> b var
R17110:17114 Basics <> false constr
R17186:17202 Logic <> not_true_is_false thm
R17186:17202 Logic <> not_true_is_false thm
prf 17469:17476 <> iff_refl
R17500:17504 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17499:17499 Logic <> P var
R17505:17505 Logic <> P var
prf 17594:17602 <> iff_trans
R17657:17661 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17656:17656 Logic <> P var
R17662:17662 Logic <> R var
R17644:17648 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17643:17643 Logic <> Q var
R17649:17649 Logic <> R var
R17631:17635 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17630:17630 Logic <> P var
R17636:17636 Logic <> Q var
prf 17893:17915 <> or_distributes_over_and
R17955:17959 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17943:17947 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17954:17954 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17942:17942 Logic <> P var
R17949:17952 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17948:17948 Logic <> Q var
R17953:17953 Logic <> R var
R17960:17960 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17967:17972 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17979:17979 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17962:17965 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17961:17961 Logic <> P var
R17966:17966 Logic <> Q var
R17974:17977 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17973:17973 Logic <> P var
R17978:17978 Logic <> R var
R18811:18828 Coq.Setoids.Setoid <> <> lib
prf 18980:18985 <> mult_0
R19010:19014 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19006:19008 Coq.Init.Logic <> :type_scope:x_'='_x not
R19002:19004 Basics <> :nat_scope:x_'*'_x not
R19001:19001 Logic <> n var
R19005:19005 Logic <> m var
R19020:19023 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19016:19018 Coq.Init.Logic <> :type_scope:x_'='_x not
R19015:19015 Logic <> n var
R19025:19027 Coq.Init.Logic <> :type_scope:x_'='_x not
R19024:19024 Logic <> m var
R19057:19065 Logic <> mult_eq_0 thm
R19057:19065 Logic <> mult_eq_0 thm
R19078:19087 Logic <> or_example thm
R19078:19087 Logic <> or_example thm
prf 19102:19109 <> or_assoc
R19149:19153 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19137:19141 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19148:19148 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19136:19136 Logic <> P var
R19143:19146 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19142:19142 Logic <> Q var
R19147:19147 Logic <> R var
R19154:19154 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19161:19165 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19156:19159 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19155:19155 Logic <> P var
R19160:19160 Logic <> Q var
R19166:19166 Logic <> R var
prf 19614:19621 <> mult_0_3
R19654:19658 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19650:19652 Coq.Init.Logic <> :type_scope:x_'='_x not
R19646:19648 Basics <> :nat_scope:x_'*'_x not
R19642:19644 Basics <> :nat_scope:x_'*'_x not
R19641:19641 Logic <> n var
R19645:19645 Logic <> m var
R19649:19649 Logic <> p var
R19664:19667 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19660:19662 Coq.Init.Logic <> :type_scope:x_'='_x not
R19659:19659 Logic <> n var
R19673:19676 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19669:19671 Coq.Init.Logic <> :type_scope:x_'='_x not
R19668:19668 Logic <> m var
R19678:19680 Coq.Init.Logic <> :type_scope:x_'='_x not
R19677:19677 Logic <> p var
R19717:19722 Logic <> mult_0 thm
R19717:19722 Logic <> mult_0 thm
R19733:19738 Logic <> mult_0 thm
R19733:19738 Logic <> mult_0 thm
R19749:19756 Logic <> or_assoc thm
R19749:19756 Logic <> or_assoc thm
prf 19954:19970 <> apply_iff_example
R19989:19991 Coq.Init.Datatypes <> nat ind
R20012:20015 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20008:20010 Coq.Init.Logic <> :type_scope:x_'='_x not
R20007:20007 Logic <> n var
R20017:20019 Coq.Init.Logic <> :type_scope:x_'='_x not
R20016:20016 Logic <> m var
R19999:20001 Coq.Init.Logic <> :type_scope:x_'='_x not
R19995:19997 Basics <> :nat_scope:x_'*'_x not
R19994:19994 Logic <> n var
R19998:19998 Logic <> m var
R20052:20057 Logic <> mult_0 thm
R20052:20057 Logic <> mult_0 thm
prf 20948:20959 <> four_is_even
R20963:20969 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20977:20978 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20974:20976 Coq.Init.Datatypes <> nat ind
R20980:20982 Coq.Init.Logic <> :type_scope:x_'='_x not
R20984:20986 Basics <> :nat_scope:x_'+'_x not
R20983:20983 Logic <> n var
R20987:20987 Logic <> n var
prf 21222:21237 <> exists_example_2
R21281:21287 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21289:21290 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21292:21294 Coq.Init.Logic <> :type_scope:x_'='_x not
R21291:21291 Logic <> n var
R21296:21298 Basics <> :nat_scope:x_'+'_x not
R21299:21299 Logic <> o var
R21254:21260 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21262:21263 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21265:21267 Coq.Init.Logic <> :type_scope:x_'='_x not
R21264:21264 Logic <> n var
R21269:21271 Basics <> :nat_scope:x_'+'_x not
R21272:21272 Logic <> m var
R21340:21342 Basics <> :nat_scope:x_'+'_x not
R21340:21342 Basics <> :nat_scope:x_'+'_x not
prf 21524:21538 <> dist_not_exists
R21563:21563 Logic <> X var
R21596:21598 Coq.Init.Logic <> :type_scope:'~'_x not
R21614:21614 Coq.Init.Logic <> :type_scope:'~'_x not
R21599:21605 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21607:21608 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21609:21610 Coq.Init.Logic <> :type_scope:'~'_x not
R21611:21611 Logic <> P var
R21613:21613 Logic <> x var
R21588:21588 Logic <> P var
R21590:21590 Logic <> x var
prf 21836:21849 <> dist_exists_or
R21876:21876 Logic <> X var
R21890:21890 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21911:21916 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21891:21897 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21899:21900 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21904:21907 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21901:21901 Logic <> P var
R21903:21903 Logic <> x var
R21908:21908 Logic <> Q var
R21910:21910 Logic <> x var
R21917:21917 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21931:21936 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21950:21950 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21918:21924 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21926:21927 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21928:21928 Logic <> P var
R21930:21930 Logic <> x var
R21937:21943 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21945:21946 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21947:21947 Logic <> Q var
R21949:21949 Logic <> x var
def 23035:23036 <> In
R23054:23054 Logic <> A var
R23062:23065 Poly <> list ind
R23067:23067 Logic <> A var
R23088:23088 Logic <> l var
R23099:23100 Poly <> ::'['_']' not
R23105:23109 Coq.Init.Logic <> False ind
R23117:23120 Poly <> ::x_'::'_x not
R23133:23136 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23129:23131 Coq.Init.Logic <> :type_scope:x_'='_x not
R23132:23132 Logic <> x var
R23137:23138 Logic <> In def
R23140:23140 Logic <> x var
def 23274:23285 <> In_example_1
R23289:23290 Logic <> In def
R23294:23294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23296:23297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23299:23300 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23302:23302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23361:23372 <> In_example_2
R23405:23411 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23414:23415 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23417:23419 Coq.Init.Logic <> :type_scope:x_'='_x not
R23416:23416 Logic <> n var
R23421:23423 Basics <> :nat_scope:x_'*'_x not
R23424:23425 Logic <> n' var
R23388:23389 Logic <> In def
R23393:23393 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23395:23396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23398:23398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23391:23391 Logic <> n var
prf 23863:23868 <> In_map
R23904:23904 Logic <> B var
R23899:23899 Logic <> A var
R23912:23915 Poly <> list ind
R23917:23917 Logic <> A var
R23925:23925 Logic <> A var
R23947:23948 Logic <> In def
R23957:23959 Poly <> map def
R23963:23963 Logic <> l var
R23961:23961 Logic <> f var
R23951:23951 Logic <> f var
R23953:23953 Logic <> x var
R23933:23934 Logic <> In def
R23938:23938 Logic <> l var
R23936:23936 Logic <> x var
prf 24694:24703 <> In_map_iff
R24739:24739 Logic <> B var
R24734:24734 Logic <> A var
R24747:24750 Poly <> list ind
R24752:24752 Logic <> A var
R24760:24760 Logic <> B var
R24782:24790 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24768:24769 Logic <> In def
R24774:24776 Poly <> map def
R24780:24780 Logic <> l var
R24778:24778 Logic <> f var
R24771:24771 Logic <> y var
R24791:24797 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24799:24800 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24808:24811 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24804:24806 Coq.Init.Logic <> :type_scope:x_'='_x not
R24801:24801 Logic <> f var
R24803:24803 Logic <> x var
R24807:24807 Logic <> y var
R24812:24813 Logic <> In def
R24817:24817 Logic <> l var
R24815:24815 Logic <> x var
R25188:25193 Logic <> In_map thm
R25188:25193 Logic <> In_map thm
prf 25272:25281 <> in_app_iff
R25302:25302 Logic <> A var
R25320:25324 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25308:25309 Logic <> In def
R25315:25316 Poly <> ::x_'++'_x not
R25314:25314 Logic <> l var
R25317:25318 Logic <> l' var
R25311:25311 Logic <> a var
R25331:25334 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25325:25326 Logic <> In def
R25330:25330 Logic <> l var
R25328:25328 Logic <> a var
R25335:25336 Logic <> In def
R25340:25341 Logic <> l' var
R25338:25338 Logic <> a var
R25507:25514 Logic <> or_assoc thm
R25507:25514 Logic <> or_assoc thm
def 26371:26373 <> All
R26384:26384 Logic <> T var
R26400:26403 Poly <> list ind
R26405:26405 Logic <> T var
R26426:26426 Logic <> l var
R26437:26438 Poly <> ::'['_']' not
R26443:26446 Coq.Init.Logic <> True ind
R26453:26456 Poly <> ::x_'::'_x not
R26468:26471 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26465:26465 Logic <> P var
R26472:26474 Logic <> All def
R26476:26476 Logic <> P var
prf 26497:26502 <> All_In
R26522:26522 Logic <> T var
R26538:26541 Poly <> list ind
R26543:26543 Logic <> T var
R26551:26551 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26575:26584 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26572:26572 Logic <> P var
R26574:26574 Logic <> x var
R26562:26563 Logic <> In def
R26567:26567 Logic <> l var
R26565:26565 Logic <> x var
R26585:26587 Logic <> All def
R26591:26591 Logic <> l var
R26589:26589 Logic <> P var
R26662:26662 Coq.Init.Logic <> I constr
R26662:26662 Coq.Init.Logic <> I constr
def 27396:27411 <> combine_odd_even
R27427:27429 Coq.Init.Datatypes <> nat ind
R27442:27444 Coq.Init.Datatypes <> nat ind
R27471:27474 Basics <> oddb def
R27476:27476 Logic <> n var
R27495:27499 Logic <> Peven var
R27501:27501 Logic <> n var
R27483:27486 Logic <> Podd var
R27488:27488 Logic <> n var
prf 27573:27594 <> combine_odd_even_intro
R27621:27623 Coq.Init.Datatypes <> nat ind
R27639:27641 Coq.Init.Datatypes <> nat ind
R27717:27732 Logic <> combine_odd_even def
R27745:27745 Logic <> n var
R27739:27743 Logic <> Peven var
R27734:27737 Logic <> Podd var
R27701:27705 Logic <> Peven var
R27707:27707 Logic <> n var
R27689:27691 Coq.Init.Logic <> :type_scope:x_'='_x not
R27683:27686 Basics <> oddb def
R27688:27688 Logic <> n var
R27692:27696 Basics <> false constr
R27667:27670 Logic <> Podd var
R27672:27672 Logic <> n var
R27656:27658 Coq.Init.Logic <> :type_scope:x_'='_x not
R27650:27653 Basics <> oddb def
R27655:27655 Logic <> n var
R27659:27662 Basics <> true constr
R27772:27787 Logic <> combine_odd_even def
R27800:27803 Basics <> oddb def
R27800:27803 Basics <> oddb def
prf 27876:27900 <> combine_odd_even_elim_odd
R27927:27929 Coq.Init.Datatypes <> nat ind
R27945:27947 Coq.Init.Datatypes <> nat ind
R28013:28016 Logic <> Podd var
R28018:28018 Logic <> n var
R27998:28000 Coq.Init.Logic <> :type_scope:x_'='_x not
R27992:27995 Basics <> oddb def
R27997:27997 Logic <> n var
R28001:28004 Basics <> true constr
R27955:27970 Logic <> combine_odd_even def
R27983:27983 Logic <> n var
R27977:27981 Logic <> Peven var
R27972:27975 Logic <> Podd var
prf 28068:28093 <> combine_odd_even_elim_even
R28120:28122 Coq.Init.Datatypes <> nat ind
R28138:28140 Coq.Init.Datatypes <> nat ind
R28207:28211 Logic <> Peven var
R28213:28213 Logic <> n var
R28191:28193 Coq.Init.Logic <> :type_scope:x_'='_x not
R28185:28188 Basics <> oddb def
R28190:28190 Logic <> n var
R28194:28198 Basics <> false constr
R28148:28163 Logic <> combine_odd_even def
R28176:28176 Logic <> n var
R28170:28174 Logic <> Peven var
R28165:28168 Logic <> Podd var
R28986:28994 Induction <> plus_comm thm
prf 30305:30314 <> plus_comm3
R30345:30347 Coq.Init.Logic <> :type_scope:x_'='_x not
R30335:30338 Basics <> :nat_scope:x_'+'_x not
R30344:30344 Basics <> :nat_scope:x_'+'_x not
R30334:30334 Logic <> n var
R30340:30342 Basics <> :nat_scope:x_'+'_x not
R30339:30339 Logic <> m var
R30343:30343 Logic <> p var
R30348:30348 Basics <> :nat_scope:x_'+'_x not
R30354:30357 Basics <> :nat_scope:x_'+'_x not
R30350:30352 Basics <> :nat_scope:x_'+'_x not
R30349:30349 Logic <> p var
R30353:30353 Logic <> m var
R30358:30358 Logic <> n var
R30631:30639 Induction <> plus_comm thm
R30631:30639 Induction <> plus_comm thm
R30652:30660 Induction <> plus_comm thm
R30652:30660 Induction <> plus_comm thm
R30929:30937 Induction <> plus_comm thm
R30929:30937 Induction <> plus_comm thm
R30959:30961 Coq.Init.Logic <> :type_scope:x_'='_x not
R30955:30957 Basics <> :nat_scope:x_'+'_x not
R30963:30965 Basics <> :nat_scope:x_'+'_x not
R30959:30961 Coq.Init.Logic <> :type_scope:x_'='_x not
R30955:30957 Basics <> :nat_scope:x_'+'_x not
R30963:30965 Basics <> :nat_scope:x_'+'_x not
R30982:30990 Induction <> plus_comm thm
R30982:30990 Induction <> plus_comm thm
prf 31249:31264 <> plus_comm3_take2
R31295:31297 Coq.Init.Logic <> :type_scope:x_'='_x not
R31285:31288 Basics <> :nat_scope:x_'+'_x not
R31294:31294 Basics <> :nat_scope:x_'+'_x not
R31284:31284 Logic <> n var
R31290:31292 Basics <> :nat_scope:x_'+'_x not
R31289:31289 Logic <> m var
R31293:31293 Logic <> p var
R31298:31298 Basics <> :nat_scope:x_'+'_x not
R31304:31307 Basics <> :nat_scope:x_'+'_x not
R31300:31302 Basics <> :nat_scope:x_'+'_x not
R31299:31299 Logic <> p var
R31303:31303 Logic <> m var
R31308:31308 Logic <> n var
R31344:31352 Induction <> plus_comm thm
R31344:31352 Induction <> plus_comm thm
R31366:31374 Induction <> plus_comm thm
R31366:31374 Induction <> plus_comm thm
def 31853:31872 <> lemma_application_ex
R31890:31892 Coq.Init.Datatypes <> nat ind
R31901:31904 Poly <> list ind
R31906:31908 Coq.Init.Datatypes <> nat ind
R31955:31957 Coq.Init.Logic <> :type_scope:x_'='_x not
R31954:31954 Logic <> n var
R31916:31917 Logic <> In def
R31922:31924 Poly <> map def
R31943:31944 Logic <> ns var
R31937:31939 Basics <> :nat_scope:x_'*'_x not
R31936:31936 Logic <> m var
R31919:31919 Logic <> n var
R31997:32001 Logic <> proj1 thm
R32008:32017 Logic <> In_map_iff thm
R31997:32001 Logic <> proj1 thm
R32008:32017 Logic <> In_map_iff thm
R32069:32076 Induction <> mult_0_r thm
R32069:32076 Induction <> mult_0_r thm
def 33929:33948 <> function_equality_ex
R33958:33960 Coq.Init.Logic <> :type_scope:x_'='_x not
R33952:33955 Coq.Init.Peano <> plus def
R33961:33964 Coq.Init.Peano <> plus def
R33967:33970 Coq.Init.Peano <> pred def
ax 34826:34850 <> functional_extensionality
R34921:34921 Logic <> Y var
R34916:34916 Logic <> X var
R34957:34959 Coq.Init.Logic <> :type_scope:x_'='_x not
R34956:34956 Logic <> f var
R34960:34960 Logic <> g var
R34938:34938 Logic <> X var
R34945:34947 Coq.Init.Logic <> :type_scope:x_'='_x not
R34942:34942 Logic <> f var
R34944:34944 Logic <> x var
R34948:34948 Logic <> g var
R34950:34950 Logic <> x var
prf 35246:35258 <> plus_comm_ext
R35266:35268 Coq.Init.Logic <> :type_scope:x_'='_x not
R35262:35265 Coq.Init.Peano <> plus def
R35281:35283 Basics <> :nat_scope:x_'+'_x not
R35280:35280 Logic <> m var
R35284:35284 Logic <> n var
R35302:35326 Logic <> functional_extensionality prfax
R35302:35326 Logic <> functional_extensionality prfax
R35347:35371 Logic <> functional_extensionality prfax
R35347:35371 Logic <> functional_extensionality prfax
R35392:35400 Induction <> plus_comm thm
R35392:35400 Induction <> plus_comm thm
R36171:36183 Logic <> plus_comm_ext thm
def 36719:36728 <> rev_append
R36743:36746 Poly <> list ind
R36748:36748 Logic <> X var
R36753:36756 Poly <> list ind
R36758:36758 Logic <> X var
R36771:36772 Logic <> l1 var
R36783:36784 Poly <> ::'['_']' not
R36789:36790 Logic <> l2 var
R36797:36800 Poly <> ::x_'::'_x not
R36808:36817 Logic <> rev_append def
R36825:36828 Poly <> ::x_'::'_x not
R36829:36830 Logic <> l2 var
def 36852:36857 <> tr_rev
R36868:36871 Poly <> list ind
R36873:36873 Logic <> X var
R36878:36881 Poly <> list ind
R36883:36883 Logic <> X var
R36890:36899 Logic <> rev_append def
R36903:36904 Poly <> ::'['_']' not
R36901:36901 Logic <> l var
prf 37257:37270 <> rev_append_app
R37292:37295 Poly <> list ind
R37297:37297 Logic <> X var
R37319:37321 Coq.Init.Logic <> :type_scope:x_'='_x not
R37303:37312 Logic <> rev_append def
R37317:37318 Logic <> l2 var
R37314:37315 Logic <> l1 var
R37322:37322 Poly <> ::x_'++'_x not
R37339:37343 Poly <> ::x_'++'_x not
R37323:37332 Logic <> rev_append def
R37337:37338 Poly <> ::'['_']' not
R37334:37335 Logic <> l1 var
R37344:37345 Logic <> l2 var
R37441:37441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37443:37443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37441:37441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37443:37443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37458:37466 Poly <> app_assoc thm
R37458:37466 Poly <> app_assoc thm
prf 37505:37518 <> tr_rev_correct
R37541:37543 Coq.Init.Logic <> :type_scope:x_'='_x not
R37533:37538 Logic <> tr_rev def
R37540:37540 Logic <> X var
R37545:37547 Poly <> rev def
R37549:37549 Logic <> X var
R37575:37599 Logic <> functional_extensionality prfax
R37575:37599 Logic <> functional_extensionality prfax
R37676:37681 Logic <> tr_rev def
R37697:37710 Logic <> rev_append_app thm
R37697:37710 Logic <> rev_append_app thm
prf 38443:38454 <> evenb_double
R38484:38486 Coq.Init.Logic <> :type_scope:x_'='_x not
R38468:38472 Basics <> evenb def
R38475:38480 Induction <> double def
R38482:38482 Logic <> k var
R38487:38490 Basics <> true constr
prf 38644:38660 <> evenb_double_conv
R38676:38682 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38684:38685 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38687:38689 Coq.Init.Logic <> :type_scope:x_'='_x not
R38686:38686 Logic <> n var
R38693:38697 Basics <> evenb def
R38699:38699 Logic <> n var
R38736:38736 Coq.Init.Datatypes <> S constr
R38739:38744 Induction <> double def
R38746:38746 Logic <> k var
R38706:38711 Induction <> double def
R38713:38713 Logic <> k var
R38836:38842 Induction <> evenb_S thm
R38836:38842 Induction <> evenb_S thm
R38855:38859 Basics <> evenb def
R38855:38859 Basics <> evenb def
R38938:38938 Coq.Init.Datatypes <> S constr
R38938:38938 Coq.Init.Datatypes <> S constr
R38971:38981 Induction <> double_plus thm
R38971:38981 Induction <> double_plus thm
R39001:39011 Induction <> double_plus thm
R39001:39011 Induction <> double_plus thm
R39032:39040 Induction <> plus_n_Sm thm
R39032:39040 Induction <> plus_n_Sm thm
prf 39080:39093 <> even_bool_prop
R39123:39127 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R39116:39118 Coq.Init.Logic <> :type_scope:x_'='_x not
R39109:39113 Basics <> evenb def
R39115:39115 Logic <> n var
R39119:39122 Basics <> true constr
R39128:39134 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39136:39137 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39139:39141 Coq.Init.Logic <> :type_scope:x_'='_x not
R39138:39138 Logic <> n var
R39142:39147 Induction <> double def
R39149:39149 Logic <> k var
R39202:39218 Logic <> evenb_double_conv thm
R39202:39218 Logic <> evenb_double_conv thm
R39321:39332 Logic <> evenb_double thm
R39321:39332 Logic <> evenb_double thm
prf 39537:39552 <> beq_nat_true_iff
R39571:39573 Coq.Init.Datatypes <> nat ind
R39598:39602 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R39591:39593 Coq.Init.Logic <> :type_scope:x_'='_x not
R39578:39584 Basics <> beq_nat def
R39589:39590 Logic <> n2 var
R39586:39587 Logic <> n1 var
R39594:39597 Basics <> true constr
R39605:39607 Coq.Init.Logic <> :type_scope:x_'='_x not
R39603:39604 Logic <> n1 var
R39608:39609 Logic <> n2 var
R39652:39663 Tactics <> beq_nat_true thm
R39652:39663 Tactics <> beq_nat_true thm
R39702:39713 Induction <> beq_nat_refl thm
R39702:39713 Induction <> beq_nat_refl thm
def 40949:40961 <> is_even_prime
R40974:40976 Coq.Init.Logic <> :type_scope:x_'='_x not
R40973:40973 Logic <> n var
R40996:41000 Basics <> false constr
R40984:40987 Basics <> true constr
def 42531:42539 <> even_1000
R42543:42549 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42551:42552 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42557:42559 Coq.Init.Logic <> :type_scope:x_'='_x not
R42560:42565 Induction <> double def
R42567:42567 Logic <> k var
def 42802:42811 <> even_1000'
R42825:42827 Coq.Init.Logic <> :type_scope:x_'='_x not
R42815:42819 Basics <> evenb def
R42828:42831 Basics <> true constr
def 43044:43054 <> even_1000''
R43058:43064 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43066:43067 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43072:43074 Coq.Init.Logic <> :type_scope:x_'='_x not
R43075:43080 Induction <> double def
R43082:43082 Logic <> k var
R43098:43111 Logic <> even_bool_prop thm
R43098:43111 Logic <> even_bool_prop thm
prf 43827:43839 <> andb_true_iff
R43856:43859 Basics <> bool ind
R43879:43883 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R43872:43874 Coq.Init.Logic <> :type_scope:x_'='_x not
R43866:43869 Basics <> ::x_'&&'_x not
R43864:43865 Logic <> b1 var
R43870:43871 Logic <> b2 var
R43875:43878 Basics <> true constr
R43893:43896 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R43886:43888 Coq.Init.Logic <> :type_scope:x_'='_x not
R43884:43885 Logic <> b1 var
R43889:43892 Basics <> true constr
R43899:43901 Coq.Init.Logic <> :type_scope:x_'='_x not
R43897:43898 Logic <> b2 var
R43902:43905 Basics <> true constr
prf 44130:44141 <> orb_true_iff
R44176:44180 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44169:44171 Coq.Init.Logic <> :type_scope:x_'='_x not
R44163:44166 Basics <> ::x_'||'_x not
R44161:44162 Logic <> b1 var
R44167:44168 Logic <> b2 var
R44172:44175 Basics <> true constr
R44190:44193 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R44183:44185 Coq.Init.Logic <> :type_scope:x_'='_x not
R44181:44182 Logic <> b1 var
R44186:44189 Basics <> true constr
R44196:44198 Coq.Init.Logic <> :type_scope:x_'='_x not
R44194:44195 Logic <> b2 var
R44199:44202 Basics <> true constr
prf 44742:44758 <> beq_nat_false_iff
R44775:44777 Coq.Init.Datatypes <> nat ind
R44801:44805 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44793:44795 Coq.Init.Logic <> :type_scope:x_'='_x not
R44782:44788 Basics <> beq_nat def
R44792:44792 Logic <> y var
R44790:44790 Logic <> x var
R44796:44800 Basics <> false constr
R44807:44810 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R44806:44806 Logic <> x var
R44811:44811 Logic <> y var
R44871:44886 Logic <> beq_nat_true_iff thm
R44871:44886 Logic <> beq_nat_true_iff thm
R44964:44970 Basics <> beq_nat def
R44964:44970 Basics <> beq_nat def
R44997:45012 Logic <> beq_nat_true_iff thm
R44997:45012 Logic <> beq_nat_true_iff thm
def 45477:45484 <> beq_list
R45507:45510 Basics <> bool ind
R45502:45502 Logic <> A var
R45497:45497 Logic <> A var
R45540:45543 Poly <> list ind
R45545:45545 Logic <> A var
R45550:45553 Basics <> bool ind
R45566:45567 Logic <> l1 var
R45578:45579 Poly <> ::'['_']' not
R45590:45591 Logic <> l2 var
R45604:45605 Poly <> ::'['_']' not
R45610:45613 Basics <> true constr
R45622:45625 Poly <> ::x_'::'_x not
R45631:45635 Basics <> false constr
R45651:45654 Poly <> ::x_'::'_x not
R45670:45671 Logic <> l2 var
R45684:45685 Poly <> ::'['_']' not
R45690:45694 Basics <> false constr
R45704:45707 Poly <> ::x_'::'_x not
R45717:45717 Basics <> ::x_'&&'_x not
R45727:45731 Basics <> ::x_'&&'_x not
R45718:45720 Logic <> beq var
R45732:45739 Logic <> beq_list def
R45741:45743 Logic <> beq var
prf 45779:45795 <> beq_list_true_iff
R45827:45830 Basics <> bool ind
R45822:45822 Logic <> A var
R45817:45817 Logic <> A var
R45929:45933 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45922:45924 Coq.Init.Logic <> :type_scope:x_'='_x not
R45904:45911 Logic <> beq_list def
R45920:45921 Logic <> l2 var
R45917:45918 Logic <> l1 var
R45913:45915 Logic <> beq var
R45925:45928 Basics <> true constr
R45936:45938 Coq.Init.Logic <> :type_scope:x_'='_x not
R45934:45935 Logic <> l1 var
R45939:45940 Logic <> l2 var
R45869:45873 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45862:45864 Coq.Init.Logic <> :type_scope:x_'='_x not
R45853:45855 Logic <> beq var
R45860:45861 Logic <> a2 var
R45857:45858 Logic <> a1 var
R45865:45868 Basics <> true constr
R45876:45878 Coq.Init.Logic <> :type_scope:x_'='_x not
R45874:45875 Logic <> a1 var
R45879:45880 Logic <> a2 var
R46177:46189 Logic <> andb_true_iff thm
R46177:46189 Logic <> andb_true_iff thm
R46331:46343 Logic <> andb_true_iff thm
R46331:46343 Logic <> andb_true_iff thm
def 46608:46614 <> forallb
R46640:46643 Basics <> bool ind
R46635:46635 Logic <> X var
R46651:46654 Poly <> list ind
R46656:46656 Logic <> X var
R46661:46664 Basics <> bool ind
R46677:46677 Logic <> l var
R46688:46689 Poly <> ::'['_']' not
R46694:46697 Basics <> true constr
R46704:46707 Poly <> ::x_'::'_x not
R46714:46717 Basics <> andb def
R46729:46735 Logic <> forallb def
R46737:46740 Logic <> test var
R46720:46723 Logic <> test var
prf 46868:46883 <> forallb_true_iff
R46906:46909 Poly <> list ind
R46911:46911 Logic <> X var
R46939:46943 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46932:46934 Coq.Init.Logic <> :type_scope:x_'='_x not
R46918:46924 Logic <> forallb def
R46931:46931 Logic <> l var
R46926:46929 Logic <> test var
R46935:46938 Basics <> true constr
R46944:46946 Logic <> All def
R46973:46973 Logic <> l var
R46964:46966 Coq.Init.Logic <> :type_scope:x_'='_x not
R46958:46961 Logic <> test var
R46963:46963 Logic <> x var
R46967:46970 Basics <> true constr
R47044:47044 Coq.Init.Logic <> I constr
R47044:47044 Coq.Init.Logic <> I constr
R47078:47090 Logic <> andb_true_iff thm
R47078:47090 Logic <> andb_true_iff thm
R47226:47238 Logic <> andb_true_iff thm
R47226:47238 Logic <> andb_true_iff thm
def 47903:47917 <> excluded_middle
R47942:47945 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47941:47941 Logic <> P var
R47946:47947 Coq.Init.Logic <> :type_scope:'~'_x not
R47948:47948 Logic <> P var
prf 48758:48783 <> restricted_excluded_middle
R48822:48825 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R48821:48821 Logic <> P var
R48826:48827 Coq.Init.Logic <> :type_scope:'~'_x not
R48828:48828 Logic <> P var
R48803:48807 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48802:48802 Logic <> P var
R48809:48811 Coq.Init.Logic <> :type_scope:x_'='_x not
R48808:48808 Logic <> b var
R48812:48815 Basics <> true constr
prf 53128:53154 <> excluded_middle_irrefutable
R53177:53178 Coq.Init.Logic <> :type_scope:'~'_x not
R53179:53181 Coq.Init.Logic <> :type_scope:'~'_x not
R53190:53190 Coq.Init.Logic <> :type_scope:'~'_x not
R53183:53186 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53182:53182 Logic <> P var
R53187:53188 Coq.Init.Logic <> :type_scope:'~'_x not
R53189:53189 Logic <> P var
prf 53677:53689 <> forall_exists
R53706:53706 Logic <> X var
R53722:53722 Logic <> X var
R53735:53741 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53743:53744 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53745:53745 Logic <> P var
R53747:53747 Logic <> x var
R53728:53728 Logic <> P var
R53730:53730 Logic <> x var
prf 53798:53812 <> not_exists_dist
R53860:53860 Logic <> X var
R53910:53910 Logic <> P var
R53912:53912 Logic <> x var
R53876:53878 Coq.Init.Logic <> :type_scope:'~'_x not
R53894:53894 Coq.Init.Logic <> :type_scope:'~'_x not
R53879:53885 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53887:53888 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53889:53890 Coq.Init.Logic <> :type_scope:'~'_x not
R53891:53891 Logic <> P var
R53893:53893 Logic <> x var
R53818:53832 Logic <> excluded_middle def
R53940:53954 Logic <> excluded_middle def
R54012:54018 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54020:54021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54022:54023 Coq.Init.Logic <> :type_scope:'~'_x not
R54026:54026 Logic <> x var
R54012:54018 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54020:54021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54022:54023 Coq.Init.Logic <> :type_scope:'~'_x not
R54026:54026 Logic <> x var
def 54677:54682 <> peirce
R54720:54720 Logic <> P var
R54716:54716 Logic <> P var
R54712:54712 Logic <> Q var
R54709:54709 Logic <> P var
def 54735:54761 <> double_negation_elimination
R54790:54790 Logic <> P var
R54783:54783 Coq.Init.Logic <> :type_scope:'~'_x not
R54784:54784 Coq.Init.Logic <> :type_scope:'~'_x not
R54785:54785 Logic <> P var
def 54805:54825 <> de_morgan_not_and_not
R54865:54866 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54864:54864 Logic <> P var
R54867:54867 Logic <> Q var
R54849:54850 Coq.Init.Logic <> :type_scope:'~'_x not
R54859:54859 Coq.Init.Logic <> :type_scope:'~'_x not
R54853:54856 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54851:54851 Coq.Init.Logic <> :type_scope:'~'_x not
R54852:54852 Logic <> P var
R54857:54857 Coq.Init.Logic <> :type_scope:'~'_x not
R54858:54858 Logic <> Q var
def 54884:54896 <> implies_to_or
R54933:54934 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54931:54931 Coq.Init.Logic <> :type_scope:'~'_x not
R54932:54932 Logic <> P var
R54935:54935 Logic <> Q var
R54924:54924 Logic <> Q var
R54921:54921 Logic <> P var
prf 54948:54963 <> excluded_middle1
R54981:54985 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R54966:54980 Logic <> excluded_middle def
R54986:54991 Logic <> peirce def
R55010:55024 Logic <> excluded_middle def
R55034:55039 Logic <> peirce def
prf 55189:55204 <> excluded_middle2
R55222:55226 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R55207:55221 Logic <> excluded_middle def
R55227:55253 Logic <> double_negation_elimination def
R55272:55286 Logic <> excluded_middle def
R55296:55322 Logic <> double_negation_elimination def
R55439:55465 Logic <> excluded_middle_irrefutable prfax
R55439:55465 Logic <> excluded_middle_irrefutable prfax
prf 55482:55497 <> excluded_middle3
R55515:55519 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R55500:55514 Logic <> excluded_middle def
R55520:55540 Logic <> de_morgan_not_and_not def
R55552:55566 Logic <> excluded_middle def
R55576:55596 Logic <> de_morgan_not_and_not def
R55725:55728 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55723:55723 Coq.Init.Logic <> :type_scope:'~'_x not
R55729:55729 Coq.Init.Logic <> :type_scope:'~'_x not
R55725:55728 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55723:55723 Coq.Init.Logic <> :type_scope:'~'_x not
R55729:55729 Coq.Init.Logic <> :type_scope:'~'_x not
R55807:55829 Logic <> not_both_true_and_false thm
R55807:55829 Logic <> not_both_true_and_false thm
prf 55846:55861 <> excluded_middle4
R55879:55883 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R55864:55878 Logic <> excluded_middle def
R55884:55896 Logic <> implies_to_or def
R55908:55922 Logic <> excluded_middle def
R55932:55944 Logic <> implies_to_or def
R56055:56061 Coq.Init.Logic <> or_comm thm
R56055:56061 Coq.Init.Logic <> or_comm thm
