DIGEST bea02bab44a387978c0a212a69f4b510
FImp
R1018:1030 Coq.Bool.Bool <> <> lib
R1048:1062 Coq.Arith.Arith <> <> lib
R1080:1094 Coq.Arith.EqNat <> <> lib
R1112:1126 Coq.omega.Omega <> <> lib
R1144:1157 Coq.Lists.List <> <> lib
R1197:1200 Maps <> <> lib
mod 1686:1689 <> AExp
ind 1806:1809 AExp aexp
constr 1825:1828 AExp ANum
constr 1848:1852 AExp APlus
constr 1881:1886 AExp AMinus
constr 1915:1919 AExp AMult
R1839:1842 Imp <> aexp ind
R1832:1834 Coq.Init.Datatypes <> nat ind
R1872:1875 Imp <> aexp ind
R1864:1867 Imp <> aexp ind
R1856:1859 Imp <> aexp ind
R1906:1909 Imp <> aexp ind
R1898:1901 Imp <> aexp ind
R1890:1893 Imp <> aexp ind
R1939:1942 Imp <> aexp ind
R1931:1934 Imp <> aexp ind
R1923:1926 Imp <> aexp ind
ind 1956:1959 AExp bexp
constr 1975:1979 AExp BTrue
constr 1992:1997 AExp BFalse
constr 2010:2012 AExp BEq
constr 2041:2043 AExp BLe
constr 2072:2075 AExp BNot
constr 2096:2099 AExp BAnd
R1983:1986 Imp <> bexp ind
R2001:2004 Imp <> bexp ind
R2032:2035 Imp <> bexp ind
R2024:2027 Imp AExp aexp ind
R2016:2019 Imp AExp aexp ind
R2063:2066 Imp <> bexp ind
R2055:2058 Imp AExp aexp ind
R2047:2050 Imp AExp aexp ind
R2087:2090 Imp <> bexp ind
R2079:2082 Imp <> bexp ind
R2119:2122 Imp <> bexp ind
R2111:2114 Imp <> bexp ind
R2103:2106 Imp <> bexp ind
def 4795:4799 AExp aeval
R4806:4809 Imp AExp aexp ind
R4814:4816 Coq.Init.Datatypes <> nat ind
R4829:4829 Imp <> a var
R4840:4843 Imp AExp ANum constr
R4856:4860 Imp AExp APlus constr
R4871:4871 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4880:4884 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4893:4893 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4872:4876 Imp <> aeval def
R4885:4889 Imp <> aeval def
R4899:4904 Imp AExp AMinus constr
R4916:4916 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4925:4929 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4938:4938 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4917:4921 Imp <> aeval def
R4930:4934 Imp <> aeval def
R4944:4948 Imp AExp AMult constr
R4959:4959 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4968:4972 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4981:4981 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4960:4964 Imp <> aeval def
R4973:4977 Imp <> aeval def
def 4999:5009 AExp test_aeval1
R5045:5047 Coq.Init.Logic <> :type_scope:x_'='_x not
R5014:5018 Imp AExp aeval def
R5021:5025 Imp AExp APlus constr
R5037:5040 Imp AExp ANum constr
R5028:5031 Imp AExp ANum constr
def 5155:5159 AExp beval
R5166:5169 Imp AExp bexp ind
R5174:5177 Coq.Init.Datatypes <> bool ind
R5190:5190 Imp <> b var
R5201:5205 Imp AExp BTrue constr
R5216:5219 Coq.Init.Datatypes <> true constr
R5225:5230 Imp AExp BFalse constr
R5240:5244 Coq.Init.Datatypes <> false constr
R5250:5252 Imp AExp BEq constr
R5265:5271 Coq.Arith.EqNat <> beq_nat def
R5285:5289 Imp AExp aeval def
R5274:5278 Imp AExp aeval def
R5299:5301 Imp AExp BLe constr
R5314:5316 Coq.Arith.Compare_dec <> leb def
R5330:5334 Imp AExp aeval def
R5319:5323 Imp AExp aeval def
R5344:5347 Imp AExp BNot constr
R5359:5362 Coq.Init.Datatypes <> negb def
R5365:5369 Imp <> beval def
R5379:5382 Imp AExp BAnd constr
R5394:5397 Coq.Init.Datatypes <> andb def
R5411:5415 Imp <> beval def
R5400:5404 Imp <> beval def
def 5824:5837 AExp optimize_0plus
R5842:5845 Imp AExp aexp ind
R5850:5853 Imp AExp aexp ind
R5866:5866 Imp <> a var
R5877:5880 Imp AExp ANum constr
R5893:5896 Imp AExp ANum constr
R5904:5908 Imp AExp APlus constr
R5911:5914 Imp AExp ANum constr
R5931:5944 Imp <> optimize_0plus def
R5953:5957 Imp AExp APlus constr
R5974:5978 Imp AExp APlus constr
R6001:6014 Imp <> optimize_0plus def
R5981:5994 Imp <> optimize_0plus def
R6024:6029 Imp AExp AMinus constr
R6046:6051 Imp AExp AMinus constr
R6074:6087 Imp <> optimize_0plus def
R6054:6067 Imp <> optimize_0plus def
R6097:6101 Imp AExp AMult constr
R6118:6122 Imp AExp AMult constr
R6145:6158 Imp <> optimize_0plus def
R6125:6138 Imp <> optimize_0plus def
def 6311:6329 AExp test_optimize_0plus
R6463:6467 Coq.Init.Logic <> :type_scope:x_'='_x not
R6334:6347 Imp AExp optimize_0plus def
R6350:6354 Imp AExp APlus constr
R6390:6394 Imp AExp APlus constr
R6437:6441 Imp AExp APlus constr
R6453:6456 Imp AExp ANum constr
R6444:6447 Imp AExp ANum constr
R6397:6400 Imp AExp ANum constr
R6357:6360 Imp AExp ANum constr
R6468:6472 Imp AExp APlus constr
R6484:6487 Imp AExp ANum constr
R6475:6478 Imp AExp ANum constr
prf 6707:6726 AExp optimize_0plus_sound
R6765:6767 Coq.Init.Logic <> :type_scope:x_'='_x not
R6741:6745 Imp AExp aeval def
R6748:6761 Imp AExp optimize_0plus def
R6763:6763 Imp <> a var
R6768:6772 Imp AExp aeval def
R6774:6774 Imp <> a var
prf 8900:8905 AExp silly1
R8928:8930 Coq.Init.Logic <> :type_scope:x_'='_x not
R8920:8924 Imp AExp aeval def
R8926:8927 Imp <> ae var
R8931:8935 Imp AExp aeval def
R8937:8938 Imp <> ae var
prf 9014:9019 AExp silly2
R9047:9047 Imp <> P var
R9042:9042 Imp <> P var
prf 9783:9785 AExp foo
R9806:9808 Coq.Init.Logic <> :type_scope:x_'='_x not
R9799:9801 Coq.Arith.Compare_dec <> leb def
R9805:9805 Imp <> n var
R9809:9812 Coq.Init.Datatypes <> true constr
prf 10067:10070 AExp foo'
R10091:10093 Coq.Init.Logic <> :type_scope:x_'='_x not
R10084:10086 Coq.Arith.Compare_dec <> leb def
R10090:10090 Imp <> n var
R10094:10097 Coq.Init.Datatypes <> true constr
prf 10437:10457 AExp optimize_0plus_sound'
R10496:10498 Coq.Init.Logic <> :type_scope:x_'='_x not
R10472:10476 Imp AExp aeval def
R10479:10492 Imp AExp optimize_0plus def
R10494:10494 Imp <> a var
R10499:10503 Imp AExp aeval def
R10505:10505 Imp <> a var
prf 13304:13325 AExp optimize_0plus_sound''
R13364:13366 Coq.Init.Logic <> :type_scope:x_'='_x not
R13340:13344 Imp AExp aeval def
R13347:13360 Imp AExp optimize_0plus def
R13362:13362 Imp <> a var
R13367:13371 Imp AExp aeval def
R13373:13373 Imp <> a var
prf 14736:14739 AExp In10
R14743:14744 Coq.Lists.List <> In def
R14749:14749 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14751:14751 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14753:14753 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14755:14755 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14757:14757 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14759:14759 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14761:14761 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14763:14763 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14765:14765 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14767:14767 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14770:14770 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
prf 15054:15058 AExp In10'
R15062:15063 Coq.Lists.List <> In def
R15068:15068 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15070:15070 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15072:15072 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15074:15074 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15076:15076 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15078:15078 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15080:15080 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15082:15082 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15084:15084 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15086:15086 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15089:15089 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 15975:15990 AExp optimize_0plus_b
R15997:16000 Imp AExp bexp ind
R16005:16008 Imp AExp bexp ind
R16021:16021 Imp <> b var
R16032:16036 Imp AExp BTrue constr
R16041:16045 Imp AExp BTrue constr
R16051:16056 Imp AExp BFalse constr
R16061:16066 Imp AExp BFalse constr
R16072:16074 Imp AExp BEq constr
R16085:16087 Imp AExp BEq constr
R16110:16123 Imp AExp optimize_0plus def
R16090:16103 Imp AExp optimize_0plus def
R16133:16135 Imp AExp BLe constr
R16146:16148 Imp AExp BLe constr
R16171:16184 Imp AExp optimize_0plus def
R16151:16164 Imp AExp optimize_0plus def
R16194:16197 Imp AExp BNot constr
R16205:16208 Imp AExp BNot constr
R16211:16226 Imp <> optimize_0plus_b def
R16236:16239 Imp AExp BAnd constr
R16250:16253 Imp AExp BAnd constr
R16278:16293 Imp <> optimize_0plus_b def
R16256:16271 Imp <> optimize_0plus_b def
prf 16315:16336 AExp optimize_0plus_b_sound
R16378:16380 Coq.Init.Logic <> :type_scope:x_'='_x not
R16352:16356 Imp AExp beval def
R16359:16374 Imp AExp optimize_0plus_b def
R16376:16376 Imp <> b var
R16381:16385 Imp AExp beval def
R16387:16387 Imp <> b var
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R16435:16454 Imp AExp optimize_0plus_sound thm
R19277:19291 Coq.omega.Omega <> <> lib
def 19303:19326 AExp silly_presburger_example
R19386:19389 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19385:19385 Imp <> m var
R19390:19390 Imp <> p var
R19362:19365 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19353:19356 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19349:19351 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19348:19348 Imp <> m var
R19352:19352 Imp <> n var
R19358:19360 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19357:19357 Imp <> n var
R19361:19361 Imp <> o var
R19371:19373 Coq.Init.Logic <> :type_scope:x_'='_x not
R19367:19369 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19366:19366 Imp <> o var
R19375:19377 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19374:19374 Imp <> p var
mod 21520:21535 <> AExp.aevalR_first_try
ind 21549:21554 AExp.aevalR_first_try aevalR
constr 21585:21590 AExp.aevalR_first_try E_ANum
constr 21640:21646 AExp.aevalR_first_try E_APlus
constr 21770:21777 AExp.aevalR_first_try E_AMinus
constr 21901:21907 AExp.aevalR_first_try E_AMult
R21566:21568 Coq.Init.Datatypes <> nat ind
R21558:21561 Imp AExp.aevalR_first_try aexp ind
R21606:21608 Coq.Init.Datatypes <> nat ind
R21618:21623 Imp <> aevalR ind
R21634:21634 Imp <> n var
R21626:21629 Imp AExp.aevalR_first_try ANum constr
R21631:21631 Imp <> n var
R21665:21668 Imp AExp.aevalR_first_try aexp ind
R21679:21681 Coq.Init.Datatypes <> nat ind
R21735:21740 Imp <> aevalR ind
R21759:21761 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21757:21758 Imp <> n1 var
R21762:21763 Imp <> n2 var
R21743:21747 Imp AExp.aevalR_first_try APlus constr
R21752:21753 Imp <> e2 var
R21749:21750 Imp <> e1 var
R21713:21718 Imp <> aevalR ind
R21723:21724 Imp <> n2 var
R21720:21721 Imp <> e2 var
R21691:21696 Imp <> aevalR ind
R21701:21702 Imp <> n1 var
R21698:21699 Imp <> e1 var
R21795:21798 Imp AExp.aevalR_first_try aexp ind
R21809:21811 Coq.Init.Datatypes <> nat ind
R21865:21870 Imp <> aevalR ind
R21890:21892 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R21888:21889 Imp <> n1 var
R21893:21894 Imp <> n2 var
R21873:21878 Imp AExp.aevalR_first_try AMinus constr
R21883:21884 Imp <> e2 var
R21880:21881 Imp <> e1 var
R21843:21848 Imp <> aevalR ind
R21853:21854 Imp <> n2 var
R21850:21851 Imp <> e2 var
R21821:21826 Imp <> aevalR ind
R21831:21832 Imp <> n1 var
R21828:21829 Imp <> e1 var
R21926:21929 Imp AExp.aevalR_first_try aexp ind
R21940:21942 Coq.Init.Datatypes <> nat ind
R21996:22001 Imp <> aevalR ind
R22020:22022 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R22018:22019 Imp <> n1 var
R22023:22024 Imp <> n2 var
R22004:22008 Imp AExp.aevalR_first_try AMult constr
R22013:22014 Imp <> e2 var
R22010:22011 Imp <> e1 var
R21974:21979 Imp <> aevalR ind
R21984:21985 Imp <> n2 var
R21981:21982 Imp <> e2 var
R21952:21957 Imp <> aevalR ind
R21962:21963 Imp <> n1 var
R21959:21960 Imp <> e1 var
R22585:22590 Imp AExp.aevalR_first_try aevalR ind
not 22561 AExp.aevalR_first_try :type_scope:x_'\\'_x
R22672:22687 Imp aevalR_first_try <> mod
ind 23191:23196 AExp aevalR
constr 23227:23232 AExp E_ANum
constr 23276:23282 AExp E_APlus
constr 23387:23394 AExp E_AMinus
constr 23500:23506 AExp E_AMult
R23208:23210 Coq.Init.Datatypes <> nat ind
R23200:23203 Imp AExp aexp ind
R23632:23637 Imp <> aevalR ind
R23246:23248 Coq.Init.Datatypes <> nat ind
R23258:23258 Imp AExp :type_scope:x_'\\'_x not
R23265:23269 Imp AExp :type_scope:x_'\\'_x not
R23259:23262 Imp AExp ANum constr
R23264:23264 Imp <> n var
R23270:23270 Imp <> n var
R23301:23304 Imp AExp aexp ind
R23316:23318 Coq.Init.Datatypes <> nat ind
R23356:23356 Imp AExp :type_scope:x_'\\'_x not
R23368:23373 Imp AExp :type_scope:x_'\\'_x not
R23381:23381 Imp AExp :type_scope:x_'\\'_x not
R23357:23361 Imp AExp APlus constr
R23366:23367 Imp <> e2 var
R23363:23364 Imp <> e1 var
R23376:23378 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23374:23375 Imp <> n1 var
R23379:23380 Imp <> n2 var
R23345:23348 Imp AExp :type_scope:x_'\\'_x not
R23343:23344 Imp <> e2 var
R23349:23350 Imp <> n2 var
R23331:23334 Imp AExp :type_scope:x_'\\'_x not
R23329:23330 Imp <> e1 var
R23335:23336 Imp <> n1 var
R23413:23416 Imp AExp aexp ind
R23428:23430 Coq.Init.Datatypes <> nat ind
R23468:23468 Imp AExp :type_scope:x_'\\'_x not
R23481:23486 Imp AExp :type_scope:x_'\\'_x not
R23494:23494 Imp AExp :type_scope:x_'\\'_x not
R23469:23474 Imp AExp AMinus constr
R23479:23480 Imp <> e2 var
R23476:23477 Imp <> e1 var
R23489:23491 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23487:23488 Imp <> n1 var
R23492:23493 Imp <> n2 var
R23457:23460 Imp AExp :type_scope:x_'\\'_x not
R23455:23456 Imp <> e2 var
R23461:23462 Imp <> n2 var
R23443:23446 Imp AExp :type_scope:x_'\\'_x not
R23441:23442 Imp <> e1 var
R23447:23448 Imp <> n1 var
R23526:23529 Imp AExp aexp ind
R23541:23543 Coq.Init.Datatypes <> nat ind
R23581:23581 Imp AExp :type_scope:x_'\\'_x not
R23593:23598 Imp AExp :type_scope:x_'\\'_x not
R23606:23606 Imp AExp :type_scope:x_'\\'_x not
R23582:23586 Imp AExp AMult constr
R23591:23592 Imp <> e2 var
R23588:23589 Imp <> e1 var
R23601:23603 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23599:23600 Imp <> n1 var
R23604:23605 Imp <> n2 var
R23570:23573 Imp AExp :type_scope:x_'\\'_x not
R23568:23569 Imp <> e2 var
R23574:23575 Imp <> n2 var
R23556:23559 Imp AExp :type_scope:x_'\\'_x not
R23554:23555 Imp <> e1 var
R23560:23561 Imp <> n1 var
R23632:23637 Imp AExp aevalR ind
not 23617 AExp :type_scope:x_'\\'_x
prf 26528:26543 AExp aeval_iff_aevalR
R26561:26561 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26568:26573 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26563:26566 Imp AExp :type_scope:x_'\\'_x not
R26562:26562 Imp <> a var
R26567:26567 Imp <> n var
R26581:26583 Coq.Init.Logic <> :type_scope:x_'='_x not
R26574:26578 Imp AExp aeval def
R26580:26580 Imp <> a var
R26584:26584 Imp <> n var
R27028:27033 Imp AExp E_ANum constr
R27028:27033 Imp AExp E_ANum constr
R27064:27070 Imp AExp E_APlus constr
R27064:27070 Imp AExp E_APlus constr
R27164:27171 Imp AExp E_AMinus constr
R27164:27171 Imp AExp E_AMinus constr
R27264:27270 Imp AExp E_AMult constr
R27264:27270 Imp AExp E_AMult constr
prf 27438:27454 AExp aeval_iff_aevalR'
R27472:27472 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27479:27484 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27474:27477 Imp AExp :type_scope:x_'\\'_x not
R27473:27473 Imp <> a var
R27478:27478 Imp <> n var
R27492:27494 Coq.Init.Logic <> :type_scope:x_'='_x not
R27485:27489 Imp AExp aeval def
R27491:27491 Imp <> a var
R27495:27495 Imp <> n var
R27961:27964 Imp <> <> mod
mod 28800:28814 <> aevalR_division
ind 28953:28956 aevalR_division aexp
constr 28972:28975 aevalR_division ANum
constr 28995:28999 aevalR_division APlus
constr 29028:29033 aevalR_division AMinus
constr 29062:29066 aevalR_division AMult
constr 29095:29098 aevalR_division ADiv
R28986:28989 Imp <> aexp ind
R28979:28981 Coq.Init.Datatypes <> nat ind
R29019:29022 Imp <> aexp ind
R29011:29014 Imp <> aexp ind
R29003:29006 Imp <> aexp ind
R29053:29056 Imp <> aexp ind
R29045:29048 Imp <> aexp ind
R29037:29040 Imp <> aexp ind
R29086:29089 Imp <> aexp ind
R29078:29081 Imp <> aexp ind
R29070:29073 Imp <> aexp ind
R29118:29121 Imp <> aexp ind
R29110:29113 Imp <> aexp ind
R29102:29105 Imp <> aexp ind
ind 29461:29466 aevalR_division aevalR
constr 29497:29502 aevalR_division E_ANum
constr 29546:29552 aevalR_division E_APlus
constr 29657:29664 aevalR_division E_AMinus
constr 29770:29776 aevalR_division E_AMult
constr 29882:29887 aevalR_division E_ADiv
R29478:29480 Coq.Init.Datatypes <> nat ind
R29470:29473 Imp aevalR_division aexp ind
R30044:30049 Imp <> aevalR ind
R29516:29518 Coq.Init.Datatypes <> nat ind
R29528:29528 Imp aevalR_division :type_scope:x_'\\'_x not
R29535:29539 Imp aevalR_division :type_scope:x_'\\'_x not
R29529:29532 Imp aevalR_division ANum constr
R29534:29534 Imp <> n var
R29540:29540 Imp <> n var
R29571:29574 Imp aevalR_division aexp ind
R29586:29588 Coq.Init.Datatypes <> nat ind
R29626:29626 Imp aevalR_division :type_scope:x_'\\'_x not
R29638:29643 Imp aevalR_division :type_scope:x_'\\'_x not
R29651:29651 Imp aevalR_division :type_scope:x_'\\'_x not
R29627:29631 Imp aevalR_division APlus constr
R29636:29637 Imp <> a2 var
R29633:29634 Imp <> a1 var
R29646:29648 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29644:29645 Imp <> n1 var
R29649:29650 Imp <> n2 var
R29615:29618 Imp aevalR_division :type_scope:x_'\\'_x not
R29613:29614 Imp <> a2 var
R29619:29620 Imp <> n2 var
R29601:29604 Imp aevalR_division :type_scope:x_'\\'_x not
R29599:29600 Imp <> a1 var
R29605:29606 Imp <> n1 var
R29683:29686 Imp aevalR_division aexp ind
R29698:29700 Coq.Init.Datatypes <> nat ind
R29738:29738 Imp aevalR_division :type_scope:x_'\\'_x not
R29751:29756 Imp aevalR_division :type_scope:x_'\\'_x not
R29764:29764 Imp aevalR_division :type_scope:x_'\\'_x not
R29739:29744 Imp aevalR_division AMinus constr
R29749:29750 Imp <> a2 var
R29746:29747 Imp <> a1 var
R29759:29761 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R29757:29758 Imp <> n1 var
R29762:29763 Imp <> n2 var
R29727:29730 Imp aevalR_division :type_scope:x_'\\'_x not
R29725:29726 Imp <> a2 var
R29731:29732 Imp <> n2 var
R29713:29716 Imp aevalR_division :type_scope:x_'\\'_x not
R29711:29712 Imp <> a1 var
R29717:29718 Imp <> n1 var
R29796:29799 Imp aevalR_division aexp ind
R29811:29813 Coq.Init.Datatypes <> nat ind
R29851:29851 Imp aevalR_division :type_scope:x_'\\'_x not
R29863:29868 Imp aevalR_division :type_scope:x_'\\'_x not
R29876:29876 Imp aevalR_division :type_scope:x_'\\'_x not
R29852:29856 Imp aevalR_division AMult constr
R29861:29862 Imp <> a2 var
R29858:29859 Imp <> a1 var
R29871:29873 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29869:29870 Imp <> n1 var
R29874:29875 Imp <> n2 var
R29840:29843 Imp aevalR_division :type_scope:x_'\\'_x not
R29838:29839 Imp <> a2 var
R29844:29845 Imp <> n2 var
R29826:29829 Imp aevalR_division :type_scope:x_'\\'_x not
R29824:29825 Imp <> a1 var
R29830:29831 Imp <> n1 var
R29907:29910 Imp aevalR_division aexp ind
R29924:29926 Coq.Init.Datatypes <> nat ind
R30003:30003 Imp aevalR_division :type_scope:x_'\\'_x not
R30014:30018 Imp aevalR_division :type_scope:x_'\\'_x not
R30004:30007 Imp aevalR_division ADiv constr
R30012:30013 Imp <> a2 var
R30009:30010 Imp <> a1 var
R30019:30020 Imp <> n3 var
R29993:29995 Coq.Init.Logic <> :type_scope:x_'='_x not
R29983:29986 Coq.Init.Peano <> mult def
R29991:29992 Imp <> n3 var
R29988:29989 Imp <> n2 var
R29996:29997 Imp <> n1 var
R29967:29969 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R29965:29966 Imp <> n2 var
R29953:29956 Imp aevalR_division :type_scope:x_'\\'_x not
R29951:29952 Imp <> a2 var
R29957:29958 Imp <> n2 var
R29939:29942 Imp aevalR_division :type_scope:x_'\\'_x not
R29937:29938 Imp <> a1 var
R29943:29944 Imp <> n1 var
R30044:30049 Imp aevalR_division aevalR ind
not 30029 aevalR_division :type_scope:x_'\\'_x
R30075:30089 Imp <> <> mod
mod 30100:30114 <> aevalR_extended
ind 30688:30691 aevalR_extended aexp
constr 30707:30710 aevalR_extended AAny
constr 30757:30760 aevalR_extended ANum
constr 30780:30784 aevalR_extended APlus
constr 30813:30818 aevalR_extended AMinus
constr 30847:30851 aevalR_extended AMult
R30715:30718 Imp <> aexp ind
R30771:30774 Imp <> aexp ind
R30764:30766 Coq.Init.Datatypes <> nat ind
R30804:30807 Imp <> aexp ind
R30796:30799 Imp <> aexp ind
R30788:30791 Imp <> aexp ind
R30838:30841 Imp <> aexp ind
R30830:30833 Imp <> aexp ind
R30822:30825 Imp <> aexp ind
R30871:30874 Imp <> aexp ind
R30863:30866 Imp <> aexp ind
R30855:30858 Imp <> aexp ind
ind 31068:31073 aevalR_extended aevalR
constr 31104:31108 aevalR_extended E_Any
constr 31179:31184 aevalR_extended E_ANum
constr 31228:31234 aevalR_extended E_APlus
constr 31339:31346 aevalR_extended E_AMinus
constr 31452:31458 aevalR_extended E_AMult
R31085:31087 Coq.Init.Datatypes <> nat ind
R31077:31080 Imp aevalR_extended aexp ind
R31582:31587 Imp <> aevalR ind
R31122:31124 Coq.Init.Datatypes <> nat ind
R31138:31141 Imp aevalR_extended :type_scope:x_'\\'_x not
R31134:31137 Imp aevalR_extended AAny constr
R31142:31142 Imp <> n var
R31198:31200 Coq.Init.Datatypes <> nat ind
R31210:31210 Imp aevalR_extended :type_scope:x_'\\'_x not
R31217:31221 Imp aevalR_extended :type_scope:x_'\\'_x not
R31211:31214 Imp aevalR_extended ANum constr
R31216:31216 Imp <> n var
R31222:31222 Imp <> n var
R31253:31256 Imp aevalR_extended aexp ind
R31268:31270 Coq.Init.Datatypes <> nat ind
R31308:31308 Imp aevalR_extended :type_scope:x_'\\'_x not
R31320:31325 Imp aevalR_extended :type_scope:x_'\\'_x not
R31333:31333 Imp aevalR_extended :type_scope:x_'\\'_x not
R31309:31313 Imp aevalR_extended APlus constr
R31318:31319 Imp <> a2 var
R31315:31316 Imp <> a1 var
R31328:31330 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31326:31327 Imp <> n1 var
R31331:31332 Imp <> n2 var
R31297:31300 Imp aevalR_extended :type_scope:x_'\\'_x not
R31295:31296 Imp <> a2 var
R31301:31302 Imp <> n2 var
R31283:31286 Imp aevalR_extended :type_scope:x_'\\'_x not
R31281:31282 Imp <> a1 var
R31287:31288 Imp <> n1 var
R31365:31368 Imp aevalR_extended aexp ind
R31380:31382 Coq.Init.Datatypes <> nat ind
R31420:31420 Imp aevalR_extended :type_scope:x_'\\'_x not
R31433:31438 Imp aevalR_extended :type_scope:x_'\\'_x not
R31446:31446 Imp aevalR_extended :type_scope:x_'\\'_x not
R31421:31426 Imp aevalR_extended AMinus constr
R31431:31432 Imp <> a2 var
R31428:31429 Imp <> a1 var
R31441:31443 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R31439:31440 Imp <> n1 var
R31444:31445 Imp <> n2 var
R31409:31412 Imp aevalR_extended :type_scope:x_'\\'_x not
R31407:31408 Imp <> a2 var
R31413:31414 Imp <> n2 var
R31395:31398 Imp aevalR_extended :type_scope:x_'\\'_x not
R31393:31394 Imp <> a1 var
R31399:31400 Imp <> n1 var
R31478:31481 Imp aevalR_extended aexp ind
R31493:31495 Coq.Init.Datatypes <> nat ind
R31533:31533 Imp aevalR_extended :type_scope:x_'\\'_x not
R31545:31550 Imp aevalR_extended :type_scope:x_'\\'_x not
R31558:31558 Imp aevalR_extended :type_scope:x_'\\'_x not
R31534:31538 Imp aevalR_extended AMult constr
R31543:31544 Imp <> a2 var
R31540:31541 Imp <> a1 var
R31553:31555 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R31551:31552 Imp <> n1 var
R31556:31557 Imp <> n2 var
R31522:31525 Imp aevalR_extended :type_scope:x_'\\'_x not
R31520:31521 Imp <> a2 var
R31526:31527 Imp <> n2 var
R31508:31511 Imp aevalR_extended :type_scope:x_'\\'_x not
R31506:31507 Imp <> a1 var
R31512:31513 Imp <> n1 var
R31582:31587 Imp aevalR_extended aevalR ind
not 31567 aevalR_extended :type_scope:x_'\\'_x
R31613:31627 Imp <> <> mod
def 32874:32878 <> state
R32883:32891 Maps <> total_map def
R32893:32895 Coq.Init.Datatypes <> nat ind
def 32910:32920 <> empty_state
R32924:32928 Imp <> state def
R32935:32941 Maps <> t_empty def
ind 33164:33167 <> aexp
constr 33183:33186 <> ANum
constr 33206:33208 <> AId
constr 33259:33263 <> APlus
constr 33292:33297 <> AMinus
constr 33326:33330 <> AMult
R33197:33200 Imp <> aexp ind
R33190:33192 Coq.Init.Datatypes <> nat ind
R33218:33221 Imp <> aexp ind
R33212:33213 Maps <> id ind
R33283:33286 Imp <> aexp ind
R33275:33278 Imp <> aexp ind
R33267:33270 Imp <> aexp ind
R33317:33320 Imp <> aexp ind
R33309:33312 Imp <> aexp ind
R33301:33304 Imp <> aexp ind
R33350:33353 Imp <> aexp ind
R33342:33345 Imp <> aexp ind
R33334:33337 Imp <> aexp ind
def 33470:33470 <> X
R33474:33475 Maps <> id ind
R33480:33481 Maps <> Id constr
def 33497:33497 <> Y
R33501:33502 Maps <> id ind
R33507:33508 Maps <> Id constr
def 33524:33524 <> Z
R33528:33529 Maps <> id ind
R33534:33535 Maps <> Id constr
ind 33905:33908 <> bexp
constr 33924:33928 <> BTrue
constr 33941:33946 <> BFalse
constr 33959:33961 <> BEq
constr 33990:33992 <> BLe
constr 34021:34024 <> BNot
constr 34045:34048 <> BAnd
R33932:33935 Imp <> bexp ind
R33950:33953 Imp <> bexp ind
R33981:33984 Imp <> bexp ind
R33973:33976 Imp <> aexp ind
R33965:33968 Imp <> aexp ind
R34012:34015 Imp <> bexp ind
R34004:34007 Imp <> aexp ind
R33996:33999 Imp <> aexp ind
R34036:34039 Imp <> bexp ind
R34028:34031 Imp <> bexp ind
R34068:34071 Imp <> bexp ind
R34060:34063 Imp <> bexp ind
R34052:34055 Imp <> bexp ind
def 34318:34322 <> aeval
R34330:34334 Imp <> state def
R34342:34345 Imp <> aexp ind
R34350:34352 Coq.Init.Datatypes <> nat ind
R34365:34365 Imp <> a var
R34376:34379 Imp <> ANum constr
R34392:34394 Imp <> AId constr
R34401:34402 Imp <> st var
R34458:34462 Imp <> APlus constr
R34473:34473 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34485:34489 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34501:34501 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34474:34478 Imp <> aeval def
R34480:34481 Imp <> st var
R34490:34494 Imp <> aeval def
R34496:34497 Imp <> st var
R34507:34512 Imp <> AMinus constr
R34524:34524 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34536:34540 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34552:34552 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R34525:34529 Imp <> aeval def
R34531:34532 Imp <> st var
R34541:34545 Imp <> aeval def
R34547:34548 Imp <> st var
R34558:34562 Imp <> AMult constr
R34573:34573 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34585:34589 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34601:34601 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R34574:34578 Imp <> aeval def
R34580:34581 Imp <> st var
R34590:34594 Imp <> aeval def
R34596:34597 Imp <> st var
def 34620:34624 <> beval
R34632:34636 Imp <> state def
R34644:34647 Imp <> bexp ind
R34652:34655 Coq.Init.Datatypes <> bool ind
R34668:34668 Imp <> b var
R34679:34683 Imp <> BTrue constr
R34694:34697 Coq.Init.Datatypes <> true constr
R34703:34708 Imp <> BFalse constr
R34718:34722 Coq.Init.Datatypes <> false constr
R34728:34730 Imp <> BEq constr
R34743:34749 Coq.Arith.EqNat <> beq_nat def
R34766:34770 Imp <> aeval def
R34772:34773 Imp <> st var
R34752:34756 Imp <> aeval def
R34758:34759 Imp <> st var
R34783:34785 Imp <> BLe constr
R34798:34800 Coq.Arith.Compare_dec <> leb def
R34817:34821 Imp <> aeval def
R34823:34824 Imp <> st var
R34803:34807 Imp <> aeval def
R34809:34810 Imp <> st var
R34834:34837 Imp <> BNot constr
R34849:34852 Coq.Init.Datatypes <> negb def
R34855:34859 Imp <> beval def
R34861:34862 Imp <> st var
R34872:34875 Imp <> BAnd constr
R34887:34890 Coq.Init.Datatypes <> andb def
R34907:34911 Imp <> beval def
R34913:34914 Imp <> st var
R34893:34897 Imp <> beval def
R34899:34900 Imp <> st var
def 34936:34940 <> aexp1
R35028:35032 Coq.Init.Logic <> :type_scope:x_'='_x not
R34946:34950 Imp <> aeval def
R34988:34992 Imp <> APlus constr
R35004:35008 Imp <> AMult constr
R35019:35022 Imp <> ANum constr
R35011:35013 Imp <> AId constr
R35015:35015 Imp <> X def
R34995:34998 Imp <> ANum constr
R34953:34960 Maps <> t_update def
R34974:34974 Imp <> X def
R34962:34972 Imp <> empty_state def
def 35071:35075 <> bexp1
R35164:35168 Coq.Init.Logic <> :type_scope:x_'='_x not
R35081:35085 Imp <> beval def
R35123:35126 Imp <> BAnd constr
R35135:35138 Imp <> BNot constr
R35141:35143 Imp <> BLe constr
R35154:35157 Imp <> ANum constr
R35146:35148 Imp <> AId constr
R35150:35150 Imp <> X def
R35128:35132 Imp <> BTrue constr
R35088:35095 Maps <> t_update def
R35109:35109 Imp <> X def
R35097:35107 Imp <> empty_state def
R35169:35172 Coq.Init.Datatypes <> true constr
ind 36260:36262 <> com
constr 36278:36282 <> CSkip
constr 36294:36297 <> CAss
constr 36323:36326 <> CSeq
constr 36352:36354 <> CIf
constr 36388:36393 <> CWhile
R36286:36288 Imp <> com ind
R36315:36317 Imp <> com ind
R36307:36310 Imp <> aexp ind
R36301:36302 Maps <> id ind
R36344:36346 Imp <> com ind
R36337:36339 Imp <> com ind
R36330:36332 Imp <> com ind
R36380:36382 Imp <> com ind
R36373:36375 Imp <> com ind
R36366:36368 Imp <> com ind
R36358:36361 Imp <> bexp ind
R36412:36414 Imp <> com ind
R36405:36407 Imp <> com ind
R36397:36400 Imp <> bexp ind
R36772:36776 Imp <> CSkip constr
not 36758 <> ::'SKIP'
R36806:36809 Imp <> CAss constr
not 36788 <> ::x_'::='_x
R36857:36860 Imp <> CSeq constr
not 36840 <> ::x_';;'_x
R36945:36950 Imp <> CWhile constr
not 36914 <> ::'WHILE'_x_'DO'_x_'END'
R37044:37046 Imp <> CIf constr
not 37002 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 37208:37218 <> fact_in_coq
R37222:37224 Imp <> com ind
R37242:37246 Imp <> ::x_';;'_x not
R37232:37236 Imp <> ::x_'::='_x not
R37231:37231 Imp <> Z def
R37237:37239 Imp <> AId constr
R37241:37241 Imp <> X def
R37259:37263 Imp <> ::x_';;'_x not
R37248:37252 Imp <> ::x_'::='_x not
R37247:37247 Imp <> Y def
R37253:37256 Imp <> ANum constr
R37264:37269 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37297:37304 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37368:37373 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37270:37273 Imp <> BNot constr
R37276:37278 Imp <> BEq constr
R37289:37292 Imp <> ANum constr
R37281:37283 Imp <> AId constr
R37285:37285 Imp <> Z def
R37332:37338 Imp <> ::x_';;'_x not
R37306:37310 Imp <> ::x_'::='_x not
R37305:37305 Imp <> Y def
R37311:37315 Imp <> AMult constr
R37326:37328 Imp <> AId constr
R37330:37330 Imp <> Z def
R37318:37320 Imp <> AId constr
R37322:37322 Imp <> Y def
R37340:37344 Imp <> ::x_'::='_x not
R37339:37339 Imp <> Z def
R37345:37350 Imp <> AMinus constr
R37361:37364 Imp <> ANum constr
R37353:37355 Imp <> AId constr
R37357:37357 Imp <> Z def
def 37500:37504 <> plus2
R37508:37510 Imp <> com ind
R37518:37523 Imp <> ::x_'::='_x not
R37546:37546 Imp <> ::x_'::='_x not
R37517:37517 Imp <> X def
R37524:37528 Imp <> APlus constr
R37539:37542 Imp <> ANum constr
R37531:37533 Imp <> AId constr
R37535:37535 Imp <> X def
def 37561:37570 <> XtimesYinZ
R37574:37576 Imp <> com ind
R37584:37589 Imp <> ::x_'::='_x not
R37611:37611 Imp <> ::x_'::='_x not
R37583:37583 Imp <> Z def
R37590:37594 Imp <> AMult constr
R37605:37607 Imp <> AId constr
R37609:37609 Imp <> Y def
R37597:37599 Imp <> AId constr
R37601:37601 Imp <> X def
def 37626:37645 <> subtract_slowly_body
R37649:37651 Imp <> com ind
R37687:37692 Imp <> ::x_';;'_x not
R37659:37663 Imp <> ::x_'::='_x not
R37658:37658 Imp <> Z def
R37664:37669 Imp <> AMinus constr
R37680:37683 Imp <> ANum constr
R37672:37674 Imp <> AId constr
R37676:37676 Imp <> Z def
R37694:37698 Imp <> ::x_'::='_x not
R37693:37693 Imp <> X def
R37699:37704 Imp <> AMinus constr
R37715:37718 Imp <> ANum constr
R37707:37709 Imp <> AId constr
R37711:37711 Imp <> X def
def 37826:37840 <> subtract_slowly
R37844:37846 Imp <> com ind
R37853:37858 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37886:37893 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37914:37919 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R37859:37862 Imp <> BNot constr
R37865:37867 Imp <> BEq constr
R37878:37881 Imp <> ANum constr
R37870:37872 Imp <> AId constr
R37874:37874 Imp <> X def
R37894:37913 Imp <> subtract_slowly_body def
def 37934:37957 <> subtract_3_from_5_slowly
R37961:37963 Imp <> com ind
R37982:37987 Imp <> ::x_';;'_x not
R37971:37975 Imp <> ::x_'::='_x not
R37970:37970 Imp <> X def
R37976:37979 Imp <> ANum constr
R38000:38005 Imp <> ::x_';;'_x not
R37989:37993 Imp <> ::x_'::='_x not
R37988:37988 Imp <> Z def
R37994:37997 Imp <> ANum constr
R38006:38020 Imp <> subtract_slowly def
def 38137:38140 <> loop
R38144:38146 Imp <> com ind
R38153:38158 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38164:38171 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38176:38181 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R38159:38163 Imp <> BTrue constr
R38172:38175 Imp <> ::'SKIP' not
def 38703:38720 <> ceval_fun_no_while
R38728:38732 Imp <> state def
R38740:38742 Imp <> com ind
R38773:38777 Imp <> state def
R38790:38790 Imp <> c var
R38803:38806 Imp <> ::'SKIP' not
R38819:38820 Imp <> st var
R38829:38833 Imp <> ::x_'::='_x not
R38848:38855 Maps <> t_update def
R38863:38867 Imp <> aeval def
R38869:38870 Imp <> st var
R38857:38858 Imp <> st var
R38884:38887 Imp <> ::x_';;'_x not
R38913:38930 Imp <> ceval_fun_no_while def
R38932:38933 Imp <> st var
R38949:38966 Imp <> ceval_fun_no_while def
R38968:38970 Imp <> st' var
R38981:38984 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R38986:38991 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R38994:38999 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39002:39004 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R39021:39025 Imp <> beval def
R39027:39028 Imp <> st var
R39088:39105 Imp <> ceval_fun_no_while def
R39107:39108 Imp <> st var
R39048:39065 Imp <> ceval_fun_no_while def
R39067:39068 Imp <> st var
R39119:39124 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39126:39129 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39131:39134 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39147:39148 Imp <> st var
ind 43400:43404 <> ceval
constr 43445:43450 <> E_Skip
constr 43491:43495 <> E_Ass
constr 43590:43594 <> E_Seq
constr 43709:43716 <> E_IfTrue
constr 43843:43851 <> E_IfFalse
constr 43979:43988 <> E_WhileEnd
constr 44075:44085 <> E_WhileLoop
R43424:43428 Imp <> state def
R43415:43419 Imp <> state def
R43408:43410 Imp <> com ind
R44277:44281 Imp <> ceval ind
R43475:43477 Imp <> ::x_'/'_x_'\\'_x not
R43480:43483 Imp <> ::x_'/'_x_'\\'_x not
R43471:43474 Imp <> ::'SKIP' not
R43478:43479 Imp <> st var
R43484:43485 Imp <> st var
R43549:43549 Imp <> ::x_'/'_x_'\\'_x not
R43558:43561 Imp <> ::x_'/'_x_'\\'_x not
R43564:43568 Imp <> ::x_'/'_x_'\\'_x not
R43584:43584 Imp <> ::x_'/'_x_'\\'_x not
R43551:43555 Imp <> ::x_'::='_x not
R43550:43550 Imp <> x var
R43556:43557 Imp <> a1 var
R43562:43563 Imp <> st var
R43569:43576 Maps <> t_update def
R43583:43583 Imp <> n var
R43581:43581 Imp <> x var
R43578:43579 Imp <> st var
R43535:43537 Coq.Init.Logic <> :type_scope:x_'='_x not
R43524:43528 Imp <> aeval def
R43533:43534 Imp <> a1 var
R43530:43531 Imp <> st var
R43538:43538 Imp <> n var
R43681:43681 Imp <> ::x_'/'_x_'\\'_x not
R43690:43693 Imp <> ::x_'/'_x_'\\'_x not
R43696:43699 Imp <> ::x_'/'_x_'\\'_x not
R43684:43687 Imp <> ::x_';;'_x not
R43682:43683 Imp <> c1 var
R43688:43689 Imp <> c2 var
R43694:43695 Imp <> st var
R43700:43703 Imp <> st'' var
R43657:43659 Imp <> ::x_'/'_x_'\\'_x not
R43663:43666 Imp <> ::x_'/'_x_'\\'_x not
R43655:43656 Imp <> c2 var
R43660:43662 Imp <> st' var
R43667:43670 Imp <> st'' var
R43632:43634 Imp <> ::x_'/'_x_'\\'_x not
R43637:43641 Imp <> ::x_'/'_x_'\\'_x not
R43630:43631 Imp <> c1 var
R43635:43636 Imp <> st var
R43642:43644 Imp <> st' var
R43800:43800 Imp <> ::x_'/'_x_'\\'_x not
R43825:43828 Imp <> ::x_'/'_x_'\\'_x not
R43831:43834 Imp <> ::x_'/'_x_'\\'_x not
R43801:43804 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43806:43811 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43814:43819 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43822:43824 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43805:43805 Imp <> b var
R43812:43813 Imp <> c1 var
R43820:43821 Imp <> c2 var
R43829:43830 Imp <> st var
R43835:43837 Imp <> st' var
R43778:43780 Imp <> ::x_'/'_x_'\\'_x not
R43783:43786 Imp <> ::x_'/'_x_'\\'_x not
R43776:43777 Imp <> c1 var
R43781:43782 Imp <> st var
R43787:43789 Imp <> st' var
R43759:43761 Coq.Init.Logic <> :type_scope:x_'='_x not
R43749:43753 Imp <> beval def
R43758:43758 Imp <> b var
R43755:43756 Imp <> st var
R43762:43765 Coq.Init.Datatypes <> true constr
R43936:43936 Imp <> ::x_'/'_x_'\\'_x not
R43961:43964 Imp <> ::x_'/'_x_'\\'_x not
R43967:43970 Imp <> ::x_'/'_x_'\\'_x not
R43937:43940 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43942:43947 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43950:43955 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43958:43960 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R43941:43941 Imp <> b var
R43948:43949 Imp <> c1 var
R43956:43957 Imp <> c2 var
R43965:43966 Imp <> st var
R43971:43973 Imp <> st' var
R43914:43916 Imp <> ::x_'/'_x_'\\'_x not
R43919:43922 Imp <> ::x_'/'_x_'\\'_x not
R43912:43913 Imp <> c2 var
R43917:43918 Imp <> st var
R43923:43925 Imp <> st' var
R43894:43896 Coq.Init.Logic <> :type_scope:x_'='_x not
R43884:43888 Imp <> beval def
R43893:43893 Imp <> b var
R43890:43891 Imp <> st var
R43897:43901 Coq.Init.Datatypes <> false constr
R44041:44041 Imp <> ::x_'/'_x_'\\'_x not
R44058:44061 Imp <> ::x_'/'_x_'\\'_x not
R44064:44067 Imp <> ::x_'/'_x_'\\'_x not
R44042:44047 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44049:44052 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44054:44057 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44048:44048 Imp <> b var
R44053:44053 Imp <> c var
R44062:44063 Imp <> st var
R44068:44069 Imp <> st var
R44023:44025 Coq.Init.Logic <> :type_scope:x_'='_x not
R44013:44017 Imp <> beval def
R44022:44022 Imp <> b var
R44019:44020 Imp <> st var
R44026:44030 Coq.Init.Datatypes <> false constr
R44211:44211 Imp <> ::x_'/'_x_'\\'_x not
R44228:44231 Imp <> ::x_'/'_x_'\\'_x not
R44234:44237 Imp <> ::x_'/'_x_'\\'_x not
R44212:44217 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44219:44222 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44224:44227 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44218:44218 Imp <> b var
R44223:44223 Imp <> c var
R44232:44233 Imp <> st var
R44238:44241 Imp <> st'' var
R44169:44169 Imp <> ::x_'/'_x_'\\'_x not
R44186:44189 Imp <> ::x_'/'_x_'\\'_x not
R44193:44196 Imp <> ::x_'/'_x_'\\'_x not
R44170:44175 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44177:44180 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44182:44185 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R44176:44176 Imp <> b var
R44181:44181 Imp <> c var
R44190:44192 Imp <> st' var
R44197:44200 Imp <> st'' var
R44147:44149 Imp <> ::x_'/'_x_'\\'_x not
R44152:44155 Imp <> ::x_'/'_x_'\\'_x not
R44146:44146 Imp <> c var
R44150:44151 Imp <> st var
R44156:44158 Imp <> st' var
R44129:44131 Coq.Init.Logic <> :type_scope:x_'='_x not
R44119:44123 Imp <> beval def
R44128:44128 Imp <> b var
R44125:44126 Imp <> st var
R44132:44135 Coq.Init.Datatypes <> true constr
R44277:44281 Imp <> ceval ind
not 44252 <> ::x_'/'_x_'\\'_x
def 44551:44564 <> ceval_example1
R44571:44571 Imp <> ::x_'/'_x_'\\'_x not
R44674:44680 Imp <> ::x_'/'_x_'\\'_x not
R44692:44699 Imp <> ::x_'/'_x_'\\'_x not
R44739:44739 Imp <> ::x_'/'_x_'\\'_x not
R44584:44591 Imp <> ::x_';;'_x not
R44573:44577 Imp <> ::x_'::='_x not
R44572:44572 Imp <> X def
R44578:44581 Imp <> ANum constr
R44592:44595 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44616:44628 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44641:44653 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44666:44673 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44596:44598 Imp <> BLe constr
R44609:44612 Imp <> ANum constr
R44601:44603 Imp <> AId constr
R44605:44605 Imp <> X def
R44630:44634 Imp <> ::x_'::='_x not
R44629:44629 Imp <> Y def
R44635:44638 Imp <> ANum constr
R44655:44659 Imp <> ::x_'::='_x not
R44654:44654 Imp <> Z def
R44660:44663 Imp <> ANum constr
R44681:44691 Imp <> empty_state def
R44700:44707 Maps <> t_update def
R44736:44736 Imp <> Z def
R44710:44717 Maps <> t_update def
R44731:44731 Imp <> X def
R44719:44729 Imp <> empty_state def
R44815:44822 Maps <> t_update def
R44836:44836 Imp <> X def
R44824:44834 Imp <> empty_state def
R44803:44807 Imp <> E_Seq constr
R44815:44822 Maps <> t_update def
R44836:44836 Imp <> X def
R44824:44834 Imp <> empty_state def
R44803:44807 Imp <> E_Seq constr
R44881:44885 Imp <> E_Ass constr
R44881:44885 Imp <> E_Ass constr
R44932:44940 Imp <> E_IfFalse constr
R44932:44940 Imp <> E_IfFalse constr
R44974:44978 Imp <> E_Ass constr
R44974:44978 Imp <> E_Ass constr
def 45057:45070 <> ceval_example2
R45077:45077 Imp <> ::x_'/'_x_'\\'_x not
R45120:45123 Imp <> ::x_'/'_x_'\\'_x not
R45135:45143 Imp <> ::x_'/'_x_'\\'_x not
R45198:45198 Imp <> ::x_'/'_x_'\\'_x not
R45090:45092 Imp <> ::x_';;'_x not
R45079:45083 Imp <> ::x_'::='_x not
R45078:45078 Imp <> X def
R45084:45087 Imp <> ANum constr
R45105:45107 Imp <> ::x_';;'_x not
R45094:45098 Imp <> ::x_'::='_x not
R45093:45093 Imp <> Y def
R45099:45102 Imp <> ANum constr
R45109:45113 Imp <> ::x_'::='_x not
R45108:45108 Imp <> Z def
R45114:45117 Imp <> ANum constr
R45124:45134 Imp <> empty_state def
R45144:45151 Maps <> t_update def
R45195:45195 Imp <> Z def
R45154:45161 Maps <> t_update def
R45190:45190 Imp <> Y def
R45164:45171 Maps <> t_update def
R45185:45185 Imp <> X def
R45173:45183 Imp <> empty_state def
R45234:45241 Maps <> t_update def
R45255:45255 Imp <> X def
R45243:45253 Imp <> empty_state def
R45216:45220 Imp <> E_Seq constr
R45273:45277 Imp <> E_Ass constr
R45234:45241 Maps <> t_update def
R45255:45255 Imp <> X def
R45243:45253 Imp <> empty_state def
R45216:45220 Imp <> E_Seq constr
R45273:45277 Imp <> E_Ass constr
R45273:45277 Imp <> E_Ass constr
R45320:45327 Maps <> t_update def
R45356:45356 Imp <> Y def
R45330:45337 Maps <> t_update def
R45351:45351 Imp <> X def
R45339:45349 Imp <> empty_state def
R45302:45306 Imp <> E_Seq constr
R45377:45381 Imp <> E_Ass constr
R45320:45327 Maps <> t_update def
R45356:45356 Imp <> Y def
R45330:45337 Maps <> t_update def
R45351:45351 Imp <> X def
R45339:45349 Imp <> empty_state def
R45302:45306 Imp <> E_Seq constr
R45377:45381 Imp <> E_Ass constr
R45377:45381 Imp <> E_Ass constr
def 45712:45719 <> pup_to_n
R45723:45725 Imp <> com ind
R45744:45749 Imp <> ::x_';;'_x not
R45733:45737 Imp <> ::x_'::='_x not
R45732:45732 Imp <> Z def
R45738:45741 Imp <> ANum constr
R45750:45756 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45776:45784 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45848:45853 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R45757:45759 Imp <> BLe constr
R45770:45772 Imp <> AId constr
R45774:45774 Imp <> X def
R45762:45764 Imp <> AId constr
R45766:45766 Imp <> Z def
R45812:45819 Imp <> ::x_';;'_x not
R45786:45790 Imp <> ::x_'::='_x not
R45785:45785 Imp <> Y def
R45791:45795 Imp <> APlus constr
R45806:45808 Imp <> AId constr
R45810:45810 Imp <> Z def
R45798:45800 Imp <> AId constr
R45802:45802 Imp <> Y def
R45821:45825 Imp <> ::x_'::='_x not
R45820:45820 Imp <> Z def
R45826:45830 Imp <> APlus constr
R45841:45844 Imp <> ANum constr
R45833:45835 Imp <> AId constr
R45837:45837 Imp <> Z def
prf 45865:45878 <> pup_to_2_ceval
R45892:45895 Imp <> ::x_'/'_x_'\\'_x not
R45920:45928 Imp <> ::x_'/'_x_'\\'_x not
R45884:45891 Imp <> pup_to_n def
R45896:45903 Maps <> t_update def
R45917:45917 Imp <> X def
R45905:45915 Imp <> empty_state def
R45929:45936 Maps <> t_update def
R46031:46031 Imp <> X def
R45939:45946 Maps <> t_update def
R46026:46026 Imp <> Y def
R45949:45956 Maps <> t_update def
R46021:46021 Imp <> X def
R45959:45966 Maps <> t_update def
R46016:46016 Imp <> Y def
R45969:45976 Maps <> t_update def
R46011:46011 Imp <> Y def
R45979:45986 Maps <> t_update def
R46006:46006 Imp <> X def
R45988:45998 Imp <> empty_state def
prf 46768:46786 <> ceval_deterministic
R46863:46865 Coq.Init.Logic <> :type_scope:x_'='_x not
R46860:46862 Imp <> st1 var
R46866:46868 Imp <> st2 var
R46839:46841 Imp <> ::x_'/'_x_'\\'_x not
R46844:46847 Imp <> ::x_'/'_x_'\\'_x not
R46838:46838 Imp <> c var
R46842:46843 Imp <> st var
R46848:46850 Imp <> st2 var
R46816:46818 Imp <> ::x_'/'_x_'\\'_x not
R46821:46824 Imp <> ::x_'/'_x_'\\'_x not
R46815:46815 Imp <> c var
R46819:46820 Imp <> st var
R46825:46827 Imp <> st1 var
R47088:47090 Coq.Init.Logic <> :type_scope:x_'='_x not
R47088:47090 Coq.Init.Logic <> :type_scope:x_'='_x not
R47855:47857 Coq.Init.Logic <> :type_scope:x_'='_x not
R47855:47857 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 48346:48355 <> plus2_spec
R48420:48422 Coq.Init.Logic <> :type_scope:x_'='_x not
R48415:48417 Imp <> st' var
R48419:48419 Imp <> X def
R48424:48426 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R48423:48423 Imp <> n var
R48397:48399 Imp <> ::x_'/'_x_'\\'_x not
R48402:48405 Imp <> ::x_'/'_x_'\\'_x not
R48392:48396 Imp <> plus2 def
R48400:48401 Imp <> st var
R48406:48408 Imp <> st' var
R48382:48384 Coq.Init.Logic <> :type_scope:x_'='_x not
R48378:48379 Imp <> st var
R48381:48381 Imp <> X def
R48385:48385 Imp <> n var
R48752:48762 Maps <> t_update_eq thm
R48752:48762 Maps <> t_update_eq thm
prf 48992:49007 <> loop_never_stops
R49028:49029 Coq.Init.Logic <> :type_scope:'~'_x not
R49046:49046 Coq.Init.Logic <> :type_scope:'~'_x not
R49034:49036 Imp <> ::x_'/'_x_'\\'_x not
R49039:49042 Imp <> ::x_'/'_x_'\\'_x not
R49030:49033 Imp <> loop def
R49037:49038 Imp <> st var
R49043:49045 Imp <> st' var
R49087:49090 Imp <> loop def
R49115:49120 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49126:49129 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49134:49137 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49121:49125 Imp <> BTrue constr
R49130:49133 Imp <> ::'SKIP' not
R49115:49120 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49126:49129 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49134:49137 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49121:49125 Imp <> BTrue constr
R49130:49133 Imp <> ::'SKIP' not
def 49498:49506 <> no_whiles
R49513:49515 Imp <> com ind
R49520:49523 Coq.Init.Datatypes <> bool ind
R49536:49536 Imp <> c var
R49547:49550 Imp <> ::'SKIP' not
R49561:49564 Coq.Init.Datatypes <> true constr
R49571:49575 Imp <> ::x_'::='_x not
R49587:49590 Coq.Init.Datatypes <> true constr
R49598:49601 Imp <> ::x_';;'_x not
R49614:49617 Coq.Init.Datatypes <> andb def
R49635:49643 Imp <> no_whiles def
R49620:49628 Imp <> no_whiles def
R49653:49656 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49658:49663 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49666:49671 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49674:49676 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49687:49690 Coq.Init.Datatypes <> andb def
R49708:49716 Imp <> no_whiles def
R49693:49701 Imp <> no_whiles def
R49726:49731 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49733:49736 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49738:49741 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49753:49757 Coq.Init.Datatypes <> false constr
ind 50053:50062 <> no_whilesR
constr 50084:50089 <> NWSkip
constr 50115:50119 <> NWAss
constr 50163:50167 <> NWSeq
constr 50247:50250 <> NWIf
R50065:50067 Imp <> com ind
R50093:50102 Imp <> no_whilesR ind
R50104:50108 Imp <> CSkip constr
R50136:50145 Imp <> no_whilesR ind
R50148:50151 Imp <> CAss constr
R50156:50156 Imp <> a var
R50153:50154 Imp <> id var
R50219:50228 Imp <> no_whilesR ind
R50231:50234 Imp <> CSeq constr
R50239:50240 Imp <> c2 var
R50236:50237 Imp <> c1 var
R50202:50211 Imp <> no_whilesR ind
R50213:50214 Imp <> c2 var
R50185:50194 Imp <> no_whilesR ind
R50196:50197 Imp <> c1 var
R50304:50313 Imp <> no_whilesR ind
R50316:50318 Imp <> CIf constr
R50325:50326 Imp <> c2 var
R50322:50323 Imp <> c1 var
R50320:50320 Imp <> b var
R50287:50296 Imp <> no_whilesR ind
R50298:50299 Imp <> c2 var
R50270:50279 Imp <> no_whilesR ind
R50281:50282 Imp <> c1 var
prf 50339:50351 <> no_whiles_eqv
R50385:50389 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R50378:50380 Coq.Init.Logic <> :type_scope:x_'='_x not
R50367:50375 Imp <> no_whiles def
R50377:50377 Imp <> c var
R50381:50384 Coq.Init.Datatypes <> true constr
R50390:50399 Imp <> no_whilesR ind
R50401:50401 Imp <> c var
R50486:50498 Coq.Bool.Bool <> andb_true_iff thm
R50486:50498 Coq.Bool.Bool <> andb_true_iff thm
R50563:50575 Coq.Bool.Bool <> andb_true_iff thm
R50563:50575 Coq.Bool.Bool <> andb_true_iff thm
R50641:50653 Coq.Bool.Bool <> andb_true_iff thm
R50641:50653 Coq.Bool.Bool <> andb_true_iff thm
R50718:50730 Coq.Bool.Bool <> andb_true_iff thm
R50718:50730 Coq.Bool.Bool <> andb_true_iff thm
prf 51263:51277 <> no_whiles_halts
R51320:51326 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51330:51331 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51333:51335 Imp <> ::x_'/'_x_'\\'_x not
R51338:51341 Imp <> ::x_'/'_x_'\\'_x not
R51332:51332 Imp <> c var
R51336:51337 Imp <> st var
R51342:51344 Imp <> st' var
R51293:51302 Imp <> no_whilesR ind
R51304:51304 Imp <> c var
R51436:51443 Maps <> t_update def
R51452:51456 Imp <> aeval def
R51436:51443 Maps <> t_update def
R51452:51456 Imp <> aeval def
R51603:51607 Imp <> E_Seq constr
R51603:51607 Imp <> E_Seq constr
R51658:51662 Imp <> beval def
R51658:51662 Imp <> beval def
R51743:51750 Imp <> E_IfTrue constr
R51743:51750 Imp <> E_IfTrue constr
R51827:51835 Imp <> E_IfFalse constr
R51827:51835 Imp <> E_IfFalse constr
ind 53344:53349 <> sinstr
constr 53363:53367 <> SPush
constr 53387:53391 <> SLoad
constr 53410:53414 <> SPlus
constr 53427:53432 <> SMinus
constr 53445:53449 <> SMult
R53378:53383 Imp <> sinstr ind
R53371:53373 Coq.Init.Datatypes <> nat ind
R53401:53406 Imp <> sinstr ind
R53395:53396 Maps <> id ind
R53418:53423 Imp <> sinstr ind
R53436:53441 Imp <> sinstr ind
R53453:53458 Imp <> sinstr ind
def 54123:54131 <> s_execute
R54139:54143 Imp <> state def
R54155:54158 Coq.Init.Datatypes <> list ind
R54160:54162 Coq.Init.Datatypes <> nat ind
R54192:54195 Coq.Init.Datatypes <> list ind
R54197:54202 Imp <> sinstr ind
R54224:54229 Coq.Init.Datatypes <> option ind
R54232:54235 Coq.Init.Datatypes <> list ind
R54237:54239 Coq.Init.Datatypes <> nat ind
R54253:54256 Imp <> prog var
R54269:54270 Coq.Lists.List ListNotations :list_scope:'['_']' not
R54275:54278 Coq.Init.Datatypes <> Some constr
R54280:54284 Imp <> stack var
R54297:54300 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54343:54347 Imp <> SPush constr
R54354:54362 Imp <> s_execute def
R54369:54372 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54373:54377 Imp <> stack var
R54364:54365 Imp <> st var
R54396:54400 Imp <> SLoad constr
R54408:54416 Imp <> s_execute def
R54422:54422 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54428:54432 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54423:54424 Imp <> st var
R54433:54437 Imp <> stack var
R54418:54419 Imp <> st var
R54456:54460 Imp <> SPlus constr
R54481:54485 Imp <> stack var
R54507:54510 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54512:54515 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54526:54534 Imp <> s_execute def
R54540:54540 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54546:54550 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54542:54544 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R54536:54537 Imp <> st var
R54584:54587 Coq.Init.Datatypes <> None constr
R54613:54618 Imp <> SMinus constr
R54639:54643 Imp <> stack var
R54665:54668 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54670:54673 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54684:54692 Imp <> s_execute def
R54698:54698 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54704:54708 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54700:54702 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R54694:54695 Imp <> st var
R54742:54745 Coq.Init.Datatypes <> None constr
R54771:54775 Imp <> SMult constr
R54796:54800 Imp <> stack var
R54822:54825 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54827:54830 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54841:54849 Imp <> s_execute def
R54855:54855 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54861:54865 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54857:54859 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R54851:54852 Imp <> st var
R54899:54902 Coq.Init.Datatypes <> None constr
def 54944:54953 <> s_execute1
R55029:55034 Coq.Init.Logic <> :type_scope:x_'='_x not
R54962:54970 Imp <> s_execute def
R54994:54994 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55002:55003 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55011:55012 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55020:55021 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55028:55028 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55022:55027 Imp <> SMinus constr
R55013:55017 Imp <> SPush constr
R55004:55008 Imp <> SPush constr
R54995:54999 Imp <> SPush constr
R54984:54985 Coq.Lists.List ListNotations :list_scope:'['_']' not
R54972:54982 Imp <> empty_state def
R55035:55038 Coq.Init.Datatypes <> Some constr
R55040:55040 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55042:55043 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55045:55045 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 55082:55091 <> s_execute2
R55182:55187 Coq.Init.Logic <> :type_scope:x_'='_x not
R55100:55108 Imp <> s_execute def
R55150:55150 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55158:55159 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55167:55168 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55174:55175 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55181:55181 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55176:55180 Imp <> SPlus constr
R55169:55173 Imp <> SMult constr
R55160:55164 Imp <> SLoad constr
R55166:55166 Imp <> X def
R55151:55155 Imp <> SPush constr
R55137:55137 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55139:55139 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55141:55141 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55111:55118 Maps <> t_update def
R55132:55132 Imp <> X def
R55120:55130 Imp <> empty_state def
R55188:55191 Coq.Init.Datatypes <> Some constr
R55193:55193 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55196:55197 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55199:55199 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 55436:55444 <> s_compile
R55451:55454 Imp <> aexp ind
R55459:55462 Coq.Init.Datatypes <> list ind
R55464:55469 Imp <> sinstr ind
R55482:55482 Imp <> e var
R55495:55498 Imp <> ANum constr
R55505:55505 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55513:55513 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55506:55510 Imp <> SPush constr
R55521:55523 Imp <> AId constr
R55531:55531 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55539:55539 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55532:55536 Imp <> SLoad constr
R55547:55551 Imp <> APlus constr
R55572:55575 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R55561:55569 Imp <> s_compile def
R55587:55590 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R55576:55584 Imp <> s_compile def
R55591:55591 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55597:55597 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55592:55596 Imp <> SPlus constr
R55605:55610 Imp <> AMinus constr
R55630:55633 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R55619:55627 Imp <> s_compile def
R55645:55648 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R55634:55642 Imp <> s_compile def
R55649:55649 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55656:55656 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55650:55655 Imp <> SMinus constr
R55664:55668 Imp <> AMult constr
R55689:55692 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R55678:55686 Imp <> s_compile def
R55704:55707 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R55693:55701 Imp <> s_compile def
R55708:55708 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55714:55714 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55709:55713 Imp <> SMult constr
def 55821:55830 <> s_compile1
R55889:55893 Coq.Init.Logic <> :type_scope:x_'='_x not
R55838:55846 Imp <> s_compile def
R55849:55854 Imp <> AMinus constr
R55865:55869 Imp <> AMult constr
R55881:55883 Imp <> AId constr
R55885:55885 Imp <> Y def
R55872:55875 Imp <> ANum constr
R55857:55859 Imp <> AId constr
R55861:55861 Imp <> X def
R55894:55894 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55902:55903 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55911:55912 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55920:55921 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55927:55928 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55935:55935 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R55929:55934 Imp <> SMinus constr
R55922:55926 Imp <> SMult constr
R55913:55917 Imp <> SLoad constr
R55919:55919 Imp <> Y def
R55904:55908 Imp <> SPush constr
R55895:55899 Imp <> SLoad constr
R55901:55901 Imp <> X def
prf 56732:56742 <> s_exe_irrel
R56887:56889 Coq.Init.Logic <> :type_scope:x_'='_x not
R56844:56852 Imp <> s_execute def
R56883:56886 Imp <> prog var
R56866:56869 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56858:56865 Imp <> stack_in var
R56870:56880 Imp <> stack_extra var
R56854:56855 Imp <> st var
R56890:56893 Coq.Init.Datatypes <> Some constr
R56905:56908 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R56896:56904 Imp <> stack_out var
R56909:56919 Imp <> stack_extra var
R56821:56823 Coq.Init.Logic <> :type_scope:x_'='_x not
R56795:56803 Imp <> s_execute def
R56817:56820 Imp <> prog var
R56808:56815 Imp <> stack_in var
R56805:56806 Imp <> st var
R56824:56827 Coq.Init.Datatypes <> Some constr
R56829:56837 Imp <> stack_out var
prf 57643:57651 <> s_exe_app
R57827:57829 Coq.Init.Logic <> :type_scope:x_'='_x not
R57792:57800 Imp <> s_execute def
R57817:57820 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R57812:57816 Imp <> prog1 var
R57821:57825 Imp <> prog2 var
R57805:57809 Imp <> stack var
R57802:57803 Imp <> st var
R57830:57833 Coq.Init.Datatypes <> Some constr
R57835:57841 Imp <> stack'' var
R57771:57773 Coq.Init.Logic <> :type_scope:x_'='_x not
R57746:57754 Imp <> s_execute def
R57766:57770 Imp <> prog2 var
R57759:57764 Imp <> stack' var
R57756:57757 Imp <> st var
R57774:57777 Coq.Init.Datatypes <> Some constr
R57779:57785 Imp <> stack'' var
R57726:57728 Coq.Init.Logic <> :type_scope:x_'='_x not
R57701:57709 Imp <> s_execute def
R57721:57725 Imp <> prog1 var
R57714:57718 Imp <> stack var
R57711:57712 Imp <> st var
R57729:57732 Coq.Init.Datatypes <> Some constr
R57734:57739 Imp <> stack' var
prf 58490:58506 <> s_compile_correct
R58523:58527 Imp <> state def
R58535:58538 Imp <> aexp ind
R58573:58575 Coq.Init.Logic <> :type_scope:x_'='_x not
R58544:58552 Imp <> s_execute def
R58561:58569 Imp <> s_compile def
R58571:58571 Imp <> e var
R58557:58558 Coq.Lists.List ListNotations :list_scope:'['_']' not
R58554:58555 Imp <> st var
R58576:58579 Coq.Init.Datatypes <> Some constr
R58581:58582 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58593:58594 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58583:58587 Imp <> aeval def
R58592:58592 Imp <> e var
R58589:58590 Imp <> st var
R58685:58685 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58697:58697 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58686:58690 Imp <> aeval def
R58661:58669 Imp <> s_exe_app thm
R58685:58685 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58697:58697 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58686:58690 Imp <> aeval def
R58661:58669 Imp <> s_exe_app thm
R58748:58748 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58760:58761 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58773:58773 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58762:58766 Imp <> aeval def
R58749:58753 Imp <> aeval def
R58724:58732 Imp <> s_exe_app thm
R58748:58748 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58760:58761 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58773:58773 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58762:58766 Imp <> aeval def
R58749:58753 Imp <> aeval def
R58724:58732 Imp <> s_exe_app thm
R58831:58831 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58843:58843 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58832:58836 Imp <> aeval def
R58800:58810 Imp <> s_exe_irrel thm
R58831:58831 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58843:58843 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58832:58836 Imp <> aeval def
R58800:58810 Imp <> s_exe_irrel thm
R58908:58908 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58920:58920 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58909:58913 Imp <> aeval def
R58884:58892 Imp <> s_exe_app thm
R58908:58908 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58920:58920 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58909:58913 Imp <> aeval def
R58884:58892 Imp <> s_exe_app thm
R58971:58971 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58983:58984 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58996:58996 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58985:58989 Imp <> aeval def
R58972:58976 Imp <> aeval def
R58947:58955 Imp <> s_exe_app thm
R58971:58971 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58983:58984 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58996:58996 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R58985:58989 Imp <> aeval def
R58972:58976 Imp <> aeval def
R58947:58955 Imp <> s_exe_app thm
R59054:59054 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59066:59066 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59055:59059 Imp <> aeval def
R59023:59033 Imp <> s_exe_irrel thm
R59054:59054 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59066:59066 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59055:59059 Imp <> aeval def
R59023:59033 Imp <> s_exe_irrel thm
R59131:59131 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59143:59143 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59132:59136 Imp <> aeval def
R59107:59115 Imp <> s_exe_app thm
R59131:59131 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59143:59143 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59132:59136 Imp <> aeval def
R59107:59115 Imp <> s_exe_app thm
R59194:59194 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59206:59207 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59219:59219 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59208:59212 Imp <> aeval def
R59195:59199 Imp <> aeval def
R59170:59178 Imp <> s_exe_app thm
R59194:59194 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59206:59207 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59219:59219 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59208:59212 Imp <> aeval def
R59195:59199 Imp <> aeval def
R59170:59178 Imp <> s_exe_app thm
R59277:59277 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59289:59289 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59278:59282 Imp <> aeval def
R59246:59256 Imp <> s_exe_irrel thm
R59277:59277 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59289:59289 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59278:59282 Imp <> aeval def
R59246:59256 Imp <> s_exe_irrel thm
mod 59396:59403 <> BreakImp
ind 59692:59694 BreakImp com
constr 59710:59714 BreakImp CSkip
constr 59726:59731 BreakImp CBreak
constr 59771:59774 BreakImp CAss
constr 59800:59803 BreakImp CSeq
constr 59829:59831 BreakImp CIf
constr 59865:59870 BreakImp CWhile
R59718:59720 Imp <> com ind
R59735:59737 Imp <> com ind
R59792:59794 Imp <> com ind
R59784:59787 Imp BreakImp aexp ind
R59778:59779 Maps <> id ind
R59821:59823 Imp <> com ind
R59814:59816 Imp <> com ind
R59807:59809 Imp <> com ind
R59857:59859 Imp <> com ind
R59850:59852 Imp <> com ind
R59843:59845 Imp <> com ind
R59835:59838 Imp BreakImp bexp ind
R59889:59891 Imp <> com ind
R59882:59884 Imp <> com ind
R59874:59877 Imp BreakImp bexp ind
R59918:59922 Imp BreakImp CSkip constr
not 59904 BreakImp ::'SKIP'
R59949:59954 Imp BreakImp CBreak constr
not 59934 BreakImp ::'BREAK'
R59984:59987 Imp BreakImp CAss constr
not 59966 BreakImp ::x_'::='_x
R60035:60038 Imp BreakImp CSeq constr
not 60018 BreakImp ::x_';;'_x
R60123:60128 Imp BreakImp CWhile constr
not 60092 BreakImp ::'WHILE'_x_'DO'_x_'END'
R60222:60224 Imp BreakImp CIf constr
not 60180 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 61326:61331 BreakImp status
constr 61347:61355 BreakImp SContinue
constr 61370:61375 BreakImp SBreak
R61359:61364 Imp <> status ind
R61379:61384 Imp <> status ind
ind 63776:63780 BreakImp ceval
constr 63831:63836 BreakImp E_Skip
constr 63890:63896 BreakImp E_Break
constr 63948:63952 BreakImp E_Ass
constr 64084:64093 BreakImp E_SeqBreak
constr 64209:64221 BreakImp E_SeqContinue
constr 64368:64375 BreakImp E_IfTrue
constr 64533:64541 BreakImp E_IfFalse
constr 64700:64711 BreakImp E_WhileFalse
constr 64831:64842 BreakImp E_WhileBreak
constr 65009:65019 BreakImp E_WhileLoop
R63810:63814 Imp BreakImp state def
R63800:63805 Imp BreakImp status ind
R63791:63795 Imp BreakImp state def
R63784:63786 Imp BreakImp com ind
R65275:65279 Imp <> ceval ind
R63862:63864 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63867:63870 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63880:63882 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63857:63861 Imp BreakImp CSkip constr
R63865:63866 Imp <> st var
R63871:63879 Imp BreakImp SContinue constr
R63883:63884 Imp <> st var
R63923:63925 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63928:63931 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63938:63940 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63917:63922 Imp BreakImp CBreak constr
R63926:63927 Imp <> st var
R63932:63937 Imp BreakImp SBreak constr
R63941:63942 Imp <> st var
R63969:63973 Imp BreakImp state def
R63982:63985 Imp BreakImp aexp ind
R63993:63995 Coq.Init.Datatypes <> nat ind
R64003:64004 Maps <> id ind
R64033:64033 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64042:64045 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64048:64051 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64061:64063 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64035:64039 Imp BreakImp ::x_'::='_x not
R64034:64034 Imp <> x var
R64040:64041 Imp <> a1 var
R64046:64047 Imp <> st var
R64052:64060 Imp BreakImp SContinue constr
R64064:64071 Maps <> t_update def
R64078:64078 Imp <> n var
R64076:64076 Imp <> x var
R64073:64074 Imp <> st var
R64025:64027 Coq.Init.Logic <> :type_scope:x_'='_x not
R64014:64018 Imp BreakImp aeval def
R64023:64024 Imp <> a1 var
R64020:64021 Imp <> st var
R64028:64028 Imp <> n var
R64113:64115 Imp BreakImp com ind
R64133:64137 Imp BreakImp state def
R64174:64174 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64182:64185 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64188:64191 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64198:64200 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64177:64179 Imp BreakImp ::x_';;'_x not
R64175:64176 Imp <> c1 var
R64180:64181 Imp <> c2 var
R64186:64187 Imp <> st var
R64192:64197 Imp BreakImp SBreak constr
R64201:64203 Imp <> st' var
R64149:64151 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64154:64157 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64164:64166 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64147:64148 Imp <> c1 var
R64152:64153 Imp <> st var
R64158:64163 Imp BreakImp SBreak constr
R64167:64169 Imp <> st' var
R64241:64243 Imp BreakImp com ind
R64263:64267 Imp BreakImp state def
R64337:64337 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64345:64348 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64351:64354 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64356:64358 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64340:64342 Imp BreakImp ::x_';;'_x not
R64338:64339 Imp <> c1 var
R64343:64344 Imp <> c2 var
R64349:64350 Imp <> st var
R64355:64355 Imp <> s var
R64359:64362 Imp <> st'' var
R64309:64311 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64315:64318 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64320:64322 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64307:64308 Imp <> c2 var
R64312:64314 Imp <> st' var
R64319:64319 Imp <> s var
R64323:64326 Imp <> st'' var
R64279:64281 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64284:64287 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64297:64299 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64277:64278 Imp <> c1 var
R64282:64283 Imp <> st var
R64288:64296 Imp BreakImp SContinue constr
R64300:64302 Imp <> st' var
R64398:64402 Imp BreakImp state def
R64410:64413 Imp BreakImp bexp ind
R64425:64427 Imp BreakImp com ind
R64486:64486 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64511:64514 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64517:64520 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64522:64524 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64487:64490 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64492:64497 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64500:64505 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64508:64510 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64491:64491 Imp <> b var
R64498:64499 Imp <> c1 var
R64506:64507 Imp <> c2 var
R64515:64516 Imp <> st var
R64521:64521 Imp <> s var
R64525:64527 Imp <> st' var
R64466:64468 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64471:64474 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64476:64478 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64464:64465 Imp <> c1 var
R64469:64470 Imp <> st var
R64475:64475 Imp <> s var
R64479:64481 Imp <> st' var
R64447:64449 Coq.Init.Logic <> :type_scope:x_'='_x not
R64437:64441 Imp BreakImp beval def
R64446:64446 Imp <> b var
R64443:64444 Imp <> st var
R64450:64453 Coq.Init.Datatypes <> true constr
R64564:64568 Imp BreakImp state def
R64576:64579 Imp BreakImp bexp ind
R64591:64593 Imp BreakImp com ind
R64653:64653 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64678:64681 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64684:64687 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64689:64691 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64654:64657 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64659:64664 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64667:64672 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64675:64677 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R64658:64658 Imp <> b var
R64665:64666 Imp <> c1 var
R64673:64674 Imp <> c2 var
R64682:64683 Imp <> st var
R64688:64688 Imp <> s var
R64692:64694 Imp <> st' var
R64633:64635 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64638:64641 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64643:64645 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64631:64632 Imp <> c2 var
R64636:64637 Imp <> st var
R64642:64642 Imp <> s var
R64646:64648 Imp <> st' var
R64613:64615 Coq.Init.Logic <> :type_scope:x_'='_x not
R64603:64607 Imp BreakImp beval def
R64612:64612 Imp <> b var
R64609:64610 Imp <> st var
R64616:64620 Coq.Init.Datatypes <> false constr
R64727:64730 Imp BreakImp bexp ind
R64739:64743 Imp BreakImp state def
R64751:64753 Imp BreakImp com ind
R64785:64785 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64802:64805 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64808:64811 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64821:64823 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64786:64791 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64793:64796 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64798:64801 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64792:64792 Imp <> b var
R64797:64797 Imp <> c var
R64806:64807 Imp <> st var
R64812:64820 Imp BreakImp SContinue constr
R64824:64825 Imp <> st var
R64773:64775 Coq.Init.Logic <> :type_scope:x_'='_x not
R64763:64767 Imp BreakImp beval def
R64772:64772 Imp <> b var
R64769:64770 Imp <> st var
R64776:64780 Coq.Init.Datatypes <> false constr
R64868:64872 Imp BreakImp state def
R64880:64883 Imp BreakImp bexp ind
R64891:64893 Imp BreakImp com ind
R64962:64962 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64979:64982 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64985:64988 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64998:65000 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64963:64968 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64970:64973 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64975:64978 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R64969:64969 Imp <> b var
R64974:64974 Imp <> c var
R64983:64984 Imp <> st var
R64989:64997 Imp BreakImp SContinue constr
R65001:65003 Imp <> st' var
R64931:64933 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64936:64939 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64946:64948 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R64930:64930 Imp <> c var
R64934:64935 Imp <> st var
R64940:64945 Imp BreakImp SBreak constr
R64949:64951 Imp <> st' var
R64913:64915 Coq.Init.Logic <> :type_scope:x_'='_x not
R64903:64907 Imp BreakImp beval def
R64912:64912 Imp <> b var
R64909:64910 Imp <> st var
R64916:64919 Coq.Init.Datatypes <> true constr
R65047:65051 Imp BreakImp state def
R65059:65062 Imp BreakImp bexp ind
R65070:65072 Imp BreakImp com ind
R65191:65191 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65208:65211 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65214:65217 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65227:65229 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65192:65197 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65199:65202 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65204:65207 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65198:65198 Imp <> b var
R65203:65203 Imp <> c var
R65212:65213 Imp <> st var
R65218:65226 Imp BreakImp SContinue constr
R65230:65233 Imp <> st'' var
R65144:65144 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65161:65164 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65168:65171 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65173:65176 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65145:65150 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65152:65155 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65157:65160 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65151:65151 Imp <> b var
R65156:65156 Imp <> c var
R65165:65167 Imp <> st' var
R65172:65172 Imp <> s var
R65177:65180 Imp <> st'' var
R65110:65112 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65115:65118 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65128:65130 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65109:65109 Imp <> c var
R65113:65114 Imp <> st var
R65119:65127 Imp BreakImp SContinue constr
R65131:65133 Imp <> st' var
R65092:65094 Coq.Init.Logic <> :type_scope:x_'='_x not
R65082:65086 Imp BreakImp beval def
R65091:65091 Imp <> b var
R65088:65089 Imp <> st var
R65095:65098 Coq.Init.Datatypes <> true constr
R65275:65279 Imp BreakImp ceval ind
not 65244 BreakImp ::x_'/'_x_'\\'_x_'/'_x
prf 65378:65389 BreakImp break_ignore
R65455:65457 Coq.Init.Logic <> :type_scope:x_'='_x not
R65453:65454 Imp <> st var
R65458:65460 Imp <> st' var
R65417:65417 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65427:65430 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65433:65436 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65438:65440 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65423:65425 Imp BreakImp ::x_';;'_x not
R65418:65422 Imp BreakImp ::'BREAK' not
R65426:65426 Imp <> c var
R65431:65432 Imp <> st var
R65437:65437 Imp <> s var
R65441:65443 Imp <> st' var
prf 65556:65569 BreakImp while_continue
R65637:65639 Coq.Init.Logic <> :type_scope:x_'='_x not
R65636:65636 Imp <> s var
R65640:65648 Imp BreakImp SContinue constr
R65596:65596 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65613:65616 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65619:65622 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65624:65626 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65597:65602 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65604:65607 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65609:65612 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65603:65603 Imp <> b var
R65608:65608 Imp <> c var
R65617:65618 Imp <> st var
R65623:65623 Imp <> s var
R65627:65629 Imp <> st' var
prf 65712:65731 BreakImp while_stops_on_break
R65807:65807 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65824:65827 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65830:65833 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65843:65845 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65808:65813 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65815:65818 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65820:65823 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R65814:65814 Imp <> b var
R65819:65819 Imp <> c var
R65828:65829 Imp <> st var
R65834:65842 Imp BreakImp SContinue constr
R65846:65848 Imp <> st' var
R65780:65782 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65785:65788 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65795:65797 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R65779:65779 Imp <> c var
R65783:65784 Imp <> st var
R65789:65794 Imp BreakImp SBreak constr
R65798:65800 Imp <> st' var
R65766:65768 Coq.Init.Logic <> :type_scope:x_'='_x not
R65756:65760 Imp BreakImp beval def
R65765:65765 Imp <> b var
R65762:65763 Imp <> st var
R65769:65772 Coq.Init.Datatypes <> true constr
R65874:65885 Imp BreakImp E_WhileBreak constr
R65874:65885 Imp BreakImp E_WhileBreak constr
prf 65981:65996 BreakImp while_break_true
R66093:66099 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R66104:66105 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R66107:66109 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66114:66117 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66124:66126 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66106:66106 Imp <> c var
R66110:66113 Imp <> st'' var
R66118:66123 Imp BreakImp SBreak constr
R66127:66129 Imp <> st' var
R66080:66082 Coq.Init.Logic <> :type_scope:x_'='_x not
R66069:66073 Imp BreakImp beval def
R66079:66079 Imp <> b var
R66075:66077 Imp <> st' var
R66083:66086 Coq.Init.Datatypes <> true constr
R66021:66021 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66038:66041 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66044:66047 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66057:66059 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66022:66027 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66029:66032 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66034:66037 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66028:66028 Imp <> b var
R66033:66033 Imp <> c var
R66042:66043 Imp <> st var
R66048:66056 Imp BreakImp SContinue constr
R66060:66062 Imp <> st' var
R66159:66164 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66166:66169 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66171:66174 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66159:66164 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66166:66169 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R66171:66174 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 66507:66525 BreakImp ceval_deterministic
R66538:66540 Imp BreakImp com ind
R66630:66633 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R66624:66626 Coq.Init.Logic <> :type_scope:x_'='_x not
R66621:66623 Imp <> st1 var
R66627:66629 Imp <> st2 var
R66636:66638 Coq.Init.Logic <> :type_scope:x_'='_x not
R66634:66635 Imp <> s1 var
R66639:66640 Imp <> s2 var
R66595:66597 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66600:66603 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66606:66608 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66594:66594 Imp <> c var
R66598:66599 Imp <> st var
R66604:66605 Imp <> s2 var
R66609:66611 Imp <> st2 var
R66567:66569 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66572:66575 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66578:66580 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R66566:66566 Imp <> c var
R66570:66571 Imp <> st var
R66576:66577 Imp <> s1 var
R66581:66583 Imp <> st1 var
R66817:66824 Imp <> <> mod
