DIGEST 567c108d42431f7f13af7b851fb419fd
FTactics
R601:604 Poly <> <> lib
prf 878:883 <> silly1
R905:907 Coq.Init.Datatypes <> nat ind
R958:960 Coq.Init.Logic <> :type_scope:x_'='_x not
R953:953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R957:957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Tactics <> o var
R954:954 Tactics <> n var
R961:961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R963:963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R965:965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R964:964 Tactics <> p var
R962:962 Tactics <> m var
R936:938 Coq.Init.Logic <> :type_scope:x_'='_x not
R931:931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R933:933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R935:935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R934:934 Tactics <> o var
R932:932 Tactics <> n var
R939:939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R941:941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R943:943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R942:942 Tactics <> p var
R940:940 Tactics <> n var
R917:919 Coq.Init.Logic <> :type_scope:x_'='_x not
R916:916 Tactics <> n var
R920:920 Tactics <> m var
prf 1501:1506 <> silly2
R1528:1530 Coq.Init.Datatypes <> nat ind
R1612:1614 Coq.Init.Logic <> :type_scope:x_'='_x not
R1607:1607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1609:1609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Tactics <> o var
R1608:1608 Tactics <> n var
R1615:1615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1617:1617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Tactics <> p var
R1616:1616 Tactics <> m var
R1569:1571 Coq.Init.Datatypes <> nat ind
R1589:1591 Coq.Init.Logic <> :type_scope:x_'='_x not
R1584:1584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1586:1586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Tactics <> o var
R1585:1585 Tactics <> q var
R1592:1592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1594:1594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Tactics <> p var
R1593:1593 Tactics <> r var
R1576:1578 Coq.Init.Logic <> :type_scope:x_'='_x not
R1575:1575 Tactics <> q var
R1579:1579 Tactics <> r var
R1540:1542 Coq.Init.Logic <> :type_scope:x_'='_x not
R1539:1539 Tactics <> n var
R1543:1543 Tactics <> m var
prf 2286:2292 <> silly2a
R2310:2312 Coq.Init.Datatypes <> nat ind
R2404:2406 Coq.Init.Logic <> :type_scope:x_'='_x not
R2401:2401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2402:2402 Tactics <> n var
R2407:2407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2408:2408 Tactics <> m var
R2359:2361 Coq.Init.Datatypes <> nat ind
R2385:2387 Coq.Init.Logic <> :type_scope:x_'='_x not
R2382:2382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2383:2383 Tactics <> q var
R2388:2388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2389:2389 Tactics <> r var
R2370:2372 Coq.Init.Logic <> :type_scope:x_'='_x not
R2365:2365 Poly <> ::'('_x_','_x_')' not
R2367:2367 Poly <> ::'('_x_','_x_')' not
R2369:2369 Poly <> ::'('_x_','_x_')' not
R2366:2366 Tactics <> q var
R2368:2368 Tactics <> q var
R2373:2373 Poly <> ::'('_x_','_x_')' not
R2375:2375 Poly <> ::'('_x_','_x_')' not
R2377:2377 Poly <> ::'('_x_','_x_')' not
R2374:2374 Tactics <> r var
R2376:2376 Tactics <> r var
R2326:2328 Coq.Init.Logic <> :type_scope:x_'='_x not
R2321:2321 Poly <> ::'('_x_','_x_')' not
R2323:2323 Poly <> ::'('_x_','_x_')' not
R2325:2325 Poly <> ::'('_x_','_x_')' not
R2322:2322 Tactics <> n var
R2324:2324 Tactics <> n var
R2329:2329 Poly <> ::'('_x_','_x_')' not
R2331:2331 Poly <> ::'('_x_','_x_')' not
R2333:2333 Poly <> ::'('_x_','_x_')' not
R2330:2330 Tactics <> m var
R2332:2332 Tactics <> m var
prf 2592:2599 <> silly_ex
R2693:2695 Coq.Init.Logic <> :type_scope:x_'='_x not
R2687:2690 Basics <> oddb def
R2696:2699 Basics <> true constr
R2671:2673 Coq.Init.Logic <> :type_scope:x_'='_x not
R2664:2668 Basics <> evenb def
R2674:2677 Basics <> true constr
R2647:2649 Coq.Init.Logic <> :type_scope:x_'='_x not
R2637:2640 Basics <> oddb def
R2643:2643 Coq.Init.Datatypes <> S constr
R2645:2645 Tactics <> n var
R2650:2653 Basics <> true constr
R2626:2628 Coq.Init.Logic <> :type_scope:x_'='_x not
R2619:2623 Basics <> evenb def
R2625:2625 Tactics <> n var
R2629:2632 Basics <> true constr
prf 2981:2995 <> silly3_firsttry
R3011:3013 Coq.Init.Datatypes <> nat ind
R3069:3071 Coq.Init.Logic <> :type_scope:x_'='_x not
R3050:3056 Basics <> beq_nat def
R3059:3059 Coq.Init.Datatypes <> S constr
R3062:3062 Coq.Init.Datatypes <> S constr
R3064:3064 Tactics <> n var
R3072:3075 Basics <> true constr
R3026:3028 Coq.Init.Logic <> :type_scope:x_'='_x not
R3022:3025 Basics <> true constr
R3029:3035 Basics <> beq_nat def
R3037:3037 Tactics <> n var
prf 3295:3300 <> silly3
R3316:3318 Coq.Init.Datatypes <> nat ind
R3374:3376 Coq.Init.Logic <> :type_scope:x_'='_x not
R3355:3361 Basics <> beq_nat def
R3364:3364 Coq.Init.Datatypes <> S constr
R3367:3367 Coq.Init.Datatypes <> S constr
R3369:3369 Tactics <> n var
R3377:3380 Basics <> true constr
R3331:3333 Coq.Init.Logic <> :type_scope:x_'='_x not
R3327:3330 Basics <> true constr
R3334:3340 Basics <> beq_nat def
R3342:3342 Tactics <> n var
prf 3765:3777 <> rev_exercise1
R3796:3799 Poly <> list ind
R3801:3803 Coq.Init.Datatypes <> nat ind
R3833:3835 Coq.Init.Logic <> :type_scope:x_'='_x not
R3831:3832 Tactics <> l' var
R3836:3838 Poly <> rev def
R3840:3840 Tactics <> l var
R3813:3815 Coq.Init.Logic <> :type_scope:x_'='_x not
R3812:3812 Tactics <> l var
R3816:3818 Poly <> rev def
R3820:3821 Tactics <> l' var
R3896:3909 Poly <> rev_involutive thm
R3896:3909 Poly <> rev_involutive thm
def 4580:4595 <> trans_eq_example
R4621:4623 Coq.Init.Datatypes <> nat ind
R4681:4683 Coq.Init.Logic <> :type_scope:x_'='_x not
R4676:4676 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4678:4678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4680:4680 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4679:4679 Tactics <> b var
R4677:4677 Tactics <> a var
R4684:4684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4686:4686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4688:4688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4687:4687 Tactics <> f var
R4685:4685 Tactics <> e var
R4659:4661 Coq.Init.Logic <> :type_scope:x_'='_x not
R4654:4654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4656:4656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4658:4658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4657:4657 Tactics <> d var
R4655:4655 Tactics <> c var
R4662:4662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4664:4664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4666:4666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4665:4665 Tactics <> f var
R4663:4663 Tactics <> e var
R4637:4639 Coq.Init.Logic <> :type_scope:x_'='_x not
R4632:4632 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4634:4634 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4636:4636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4635:4635 Tactics <> b var
R4633:4633 Tactics <> a var
R4640:4640 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4642:4642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4644:4644 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4643:4643 Tactics <> d var
R4641:4641 Tactics <> c var
prf 4945:4952 <> trans_eq
R4981:4981 Tactics <> X var
R5006:5008 Coq.Init.Logic <> :type_scope:x_'='_x not
R5005:5005 Tactics <> n var
R5009:5009 Tactics <> o var
R4997:4999 Coq.Init.Logic <> :type_scope:x_'='_x not
R4996:4996 Tactics <> m var
R5000:5000 Tactics <> o var
R4988:4990 Coq.Init.Logic <> :type_scope:x_'='_x not
R4987:4987 Tactics <> n var
R4991:4991 Tactics <> m var
def 5264:5280 <> trans_eq_example'
R5306:5308 Coq.Init.Datatypes <> nat ind
R5366:5368 Coq.Init.Logic <> :type_scope:x_'='_x not
R5361:5361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5363:5363 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5365:5365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5364:5364 Tactics <> b var
R5362:5362 Tactics <> a var
R5369:5369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5371:5371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5373:5373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5372:5372 Tactics <> f var
R5370:5370 Tactics <> e var
R5344:5346 Coq.Init.Logic <> :type_scope:x_'='_x not
R5339:5339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5341:5341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5343:5343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5342:5342 Tactics <> d var
R5340:5340 Tactics <> c var
R5347:5347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5349:5349 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5351:5351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5350:5350 Tactics <> f var
R5348:5348 Tactics <> e var
R5322:5324 Coq.Init.Logic <> :type_scope:x_'='_x not
R5317:5317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5319:5319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5321:5321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5320:5320 Tactics <> b var
R5318:5318 Tactics <> a var
R5325:5325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5327:5327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5329:5329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5328:5328 Tactics <> d var
R5326:5326 Tactics <> c var
R5844:5844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5846:5846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5848:5848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5826:5833 Tactics <> trans_eq thm
R5844:5844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5846:5846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5848:5848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5826:5833 Tactics <> trans_eq thm
def 6178:6194 <> trans_eq_exercise
R6216:6218 Coq.Init.Datatypes <> nat ind
R6272:6272 Coq.Init.Logic <> :type_scope:x_'='_x not
R6278:6282 Coq.Init.Logic <> :type_scope:x_'='_x not
R6293:6293 Coq.Init.Logic <> :type_scope:x_'='_x not
R6274:6276 Basics <> :nat_scope:x_'+'_x not
R6273:6273 Tactics <> n var
R6277:6277 Tactics <> p var
R6283:6290 Basics <> minustwo def
R6292:6292 Tactics <> o var
R6252:6252 Coq.Init.Logic <> :type_scope:x_'='_x not
R6258:6261 Coq.Init.Logic <> :type_scope:x_'='_x not
R6254:6256 Basics <> :nat_scope:x_'+'_x not
R6253:6253 Tactics <> n var
R6257:6257 Tactics <> p var
R6262:6262 Tactics <> m var
R6228:6231 Coq.Init.Logic <> :type_scope:x_'='_x not
R6242:6242 Coq.Init.Logic <> :type_scope:x_'='_x not
R6227:6227 Tactics <> m var
R6232:6239 Basics <> minustwo def
R6241:6241 Tactics <> o var
prf 7830:7840 <> S_injective
R7858:7860 Coq.Init.Datatypes <> nat ind
R7882:7884 Coq.Init.Logic <> :type_scope:x_'='_x not
R7881:7881 Tactics <> n var
R7885:7885 Tactics <> m var
R7869:7871 Coq.Init.Logic <> :type_scope:x_'='_x not
R7866:7866 Coq.Init.Datatypes <> S constr
R7868:7868 Tactics <> n var
R7872:7872 Coq.Init.Datatypes <> S constr
R7874:7874 Tactics <> m var
prf 8372:8384 <> inversion_ex1
R8404:8406 Coq.Init.Datatypes <> nat ind
R8436:8438 Coq.Init.Logic <> :type_scope:x_'='_x not
R8433:8433 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8435:8435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8434:8434 Tactics <> n var
R8439:8439 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8441:8441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8440:8440 Tactics <> m var
R8418:8420 Coq.Init.Logic <> :type_scope:x_'='_x not
R8412:8412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8414:8415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8417:8417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8416:8416 Tactics <> m var
R8413:8413 Tactics <> n var
R8421:8421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8423:8424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8426:8426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8425:8425 Tactics <> o var
R8422:8422 Tactics <> o var
prf 8610:8622 <> inversion_ex2
R8640:8642 Coq.Init.Datatypes <> nat ind
R8664:8666 Coq.Init.Logic <> :type_scope:x_'='_x not
R8663:8663 Tactics <> n var
R8667:8667 Tactics <> m var
R8651:8653 Coq.Init.Logic <> :type_scope:x_'='_x not
R8648:8648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8650:8650 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8649:8649 Tactics <> n var
R8654:8654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8656:8656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8655:8655 Tactics <> m var
def 8789:8801 <> inversion_ex3
R8832:8832 Tactics <> X var
R8842:8845 Poly <> list ind
R8847:8847 Tactics <> X var
R8901:8903 Coq.Init.Logic <> :type_scope:x_'='_x not
R8900:8900 Tactics <> x var
R8904:8904 Tactics <> y var
R8885:8887 Coq.Init.Logic <> :type_scope:x_'='_x not
R8880:8883 Poly <> ::x_'::'_x not
R8879:8879 Tactics <> y var
R8884:8884 Tactics <> l var
R8889:8892 Poly <> ::x_'::'_x not
R8888:8888 Tactics <> x var
R8893:8893 Tactics <> j var
R8864:8866 Coq.Init.Logic <> :type_scope:x_'='_x not
R8854:8857 Poly <> ::x_'::'_x not
R8853:8853 Tactics <> x var
R8859:8862 Poly <> ::x_'::'_x not
R8858:8858 Tactics <> y var
R8863:8863 Tactics <> l var
R8868:8871 Poly <> ::x_'::'_x not
R8867:8867 Tactics <> z var
R8872:8872 Tactics <> j var
prf 9266:9272 <> f_equal
R9305:9305 Tactics <> B var
R9300:9300 Tactics <> A var
R9314:9314 Tactics <> A var
R9332:9334 Coq.Init.Logic <> :type_scope:x_'='_x not
R9329:9329 Tactics <> f var
R9331:9331 Tactics <> x var
R9335:9335 Tactics <> f var
R9337:9337 Tactics <> y var
R9321:9323 Coq.Init.Logic <> :type_scope:x_'='_x not
R9320:9320 Tactics <> x var
R9324:9324 Tactics <> y var
prf 9629:9639 <> beq_nat_0_l
R9679:9681 Coq.Init.Logic <> :type_scope:x_'='_x not
R9678:9678 Tactics <> n var
R9667:9669 Coq.Init.Logic <> :type_scope:x_'='_x not
R9656:9662 Basics <> beq_nat def
R9666:9666 Tactics <> n var
R9670:9673 Basics <> true constr
prf 10601:10613 <> inversion_ex4
R10629:10631 Coq.Init.Datatypes <> nat ind
R10655:10657 Coq.Init.Logic <> :type_scope:x_'='_x not
R10651:10653 Basics <> :nat_scope:x_'+'_x not
R10640:10642 Coq.Init.Logic <> :type_scope:x_'='_x not
R10637:10637 Coq.Init.Datatypes <> S constr
R10639:10639 Tactics <> n var
R10643:10643 Coq.Init.Datatypes <> O constr
prf 10719:10731 <> inversion_ex5
R10749:10751 Coq.Init.Datatypes <> nat ind
R10778:10780 Coq.Init.Logic <> :type_scope:x_'='_x not
R10775:10775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10777:10777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10776:10776 Tactics <> n var
R10781:10781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10783:10783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10782:10782 Tactics <> m var
R10762:10764 Coq.Init.Logic <> :type_scope:x_'='_x not
R10757:10761 Basics <> false constr
R10765:10768 Basics <> true constr
def 11262:11274 <> inversion_ex6
R11331:11331 Tactics <> X var
R11341:11344 Poly <> list ind
R11346:11346 Tactics <> X var
R11396:11398 Coq.Init.Logic <> :type_scope:x_'='_x not
R11395:11395 Tactics <> x var
R11399:11399 Tactics <> z var
R11380:11382 Coq.Init.Logic <> :type_scope:x_'='_x not
R11375:11378 Poly <> ::x_'::'_x not
R11374:11374 Tactics <> y var
R11379:11379 Tactics <> l var
R11384:11387 Poly <> ::x_'::'_x not
R11383:11383 Tactics <> z var
R11388:11388 Tactics <> j var
R11363:11365 Coq.Init.Logic <> :type_scope:x_'='_x not
R11353:11356 Poly <> ::x_'::'_x not
R11352:11352 Tactics <> x var
R11358:11361 Poly <> ::x_'::'_x not
R11357:11357 Tactics <> y var
R11362:11362 Tactics <> l var
R11366:11367 Poly <> ::'['_']' not
prf 12686:12690 <> S_inj
R12708:12710 Coq.Init.Datatypes <> nat ind
R12718:12721 Basics <> bool ind
R12774:12776 Coq.Init.Logic <> :type_scope:x_'='_x not
R12763:12769 Basics <> beq_nat def
R12773:12773 Tactics <> m var
R12771:12771 Tactics <> n var
R12777:12777 Tactics <> b var
R12749:12751 Coq.Init.Logic <> :type_scope:x_'='_x not
R12730:12736 Basics <> beq_nat def
R12745:12745 Coq.Init.Datatypes <> S constr
R12747:12747 Tactics <> m var
R12739:12739 Coq.Init.Datatypes <> S constr
R12741:12741 Tactics <> n var
R12752:12752 Tactics <> b var
prf 13615:13621 <> silly3'
R13637:13639 Coq.Init.Datatypes <> nat ind
R13730:13732 Coq.Init.Logic <> :type_scope:x_'='_x not
R13726:13729 Basics <> true constr
R13733:13739 Basics <> beq_nat def
R13742:13742 Coq.Init.Datatypes <> S constr
R13745:13745 Coq.Init.Datatypes <> S constr
R13747:13747 Tactics <> n var
R13705:13707 Coq.Init.Logic <> :type_scope:x_'='_x not
R13701:13704 Basics <> true constr
R13708:13714 Basics <> beq_nat def
R13716:13716 Tactics <> n var
R13687:13689 Coq.Init.Logic <> :type_scope:x_'='_x not
R13668:13674 Basics <> beq_nat def
R13677:13677 Coq.Init.Datatypes <> S constr
R13680:13680 Coq.Init.Datatypes <> S constr
R13682:13682 Tactics <> n var
R13690:13693 Basics <> true constr
R13657:13659 Coq.Init.Logic <> :type_scope:x_'='_x not
R13646:13652 Basics <> beq_nat def
R13654:13654 Tactics <> n var
R13660:13663 Basics <> true constr
prf 14629:14646 <> plus_n_n_injective
R14690:14692 Coq.Init.Logic <> :type_scope:x_'='_x not
R14689:14689 Tactics <> n var
R14693:14693 Tactics <> m var
R14672:14674 Coq.Init.Logic <> :type_scope:x_'='_x not
R14668:14670 Basics <> :nat_scope:x_'+'_x not
R14667:14667 Tactics <> n var
R14671:14671 Tactics <> n var
R14676:14678 Basics <> :nat_scope:x_'+'_x not
R14675:14675 Tactics <> m var
R14679:14679 Tactics <> m var
R14798:14806 Induction <> plus_n_Sm thm
R14798:14806 Induction <> plus_n_Sm thm
R14868:14876 Induction <> plus_n_Sm thm
R14868:14876 Induction <> plus_n_Sm thm
R14914:14922 Induction <> plus_n_Sm thm
R14914:14922 Induction <> plus_n_Sm thm
R14941:14949 Induction <> plus_n_Sm thm
R14941:14949 Induction <> plus_n_Sm thm
prf 15940:15962 <> double_injective_FAILED
R16012:16014 Coq.Init.Logic <> :type_scope:x_'='_x not
R16011:16011 Tactics <> n var
R16015:16015 Tactics <> m var
R15991:15993 Coq.Init.Logic <> :type_scope:x_'='_x not
R15983:15988 Induction <> double def
R15990:15990 Tactics <> n var
R15994:15999 Induction <> double def
R16001:16001 Tactics <> m var
R16296:16302 Tactics <> f_equal thm
R16296:16302 Tactics <> f_equal thm
prf 18548:18563 <> double_injective
R18613:18615 Coq.Init.Logic <> :type_scope:x_'='_x not
R18612:18612 Tactics <> n var
R18616:18616 Tactics <> m var
R18592:18594 Coq.Init.Logic <> :type_scope:x_'='_x not
R18584:18589 Induction <> double def
R18591:18591 Tactics <> n var
R18595:18600 Induction <> double def
R18602:18602 Tactics <> m var
R19489:19495 Tactics <> f_equal thm
R19489:19495 Tactics <> f_equal thm
prf 20390:20401 <> beq_nat_true
R20444:20446 Coq.Init.Logic <> :type_scope:x_'='_x not
R20443:20443 Tactics <> n var
R20447:20447 Tactics <> m var
R20432:20434 Coq.Init.Logic <> :type_scope:x_'='_x not
R20421:20427 Basics <> beq_nat def
R20431:20431 Tactics <> m var
R20429:20429 Tactics <> n var
R20435:20438 Basics <> true constr
prf 21180:21208 <> double_injective_take2_FAILED
R21258:21260 Coq.Init.Logic <> :type_scope:x_'='_x not
R21257:21257 Tactics <> n var
R21261:21261 Tactics <> m var
R21237:21239 Coq.Init.Logic <> :type_scope:x_'='_x not
R21229:21234 Induction <> double def
R21236:21236 Tactics <> n var
R21240:21245 Induction <> double def
R21247:21247 Tactics <> m var
R21542:21548 Tactics <> f_equal thm
R21542:21548 Tactics <> f_equal thm
prf 22484:22505 <> double_injective_take2
R22555:22557 Coq.Init.Logic <> :type_scope:x_'='_x not
R22554:22554 Tactics <> n var
R22558:22558 Tactics <> m var
R22534:22536 Coq.Init.Logic <> :type_scope:x_'='_x not
R22526:22531 Induction <> double def
R22533:22533 Tactics <> n var
R22537:22542 Induction <> double def
R22544:22544 Tactics <> m var
R23021:23027 Tactics <> f_equal thm
R23021:23027 Tactics <> f_equal thm
prf 25231:25241 <> beq_id_true
R25281:25283 Coq.Init.Logic <> :type_scope:x_'='_x not
R25280:25280 Tactics <> x var
R25284:25284 Tactics <> y var
R25269:25271 Coq.Init.Logic <> :type_scope:x_'='_x not
R25259:25264 Lists <> beq_id def
R25268:25268 Tactics <> y var
R25266:25266 Tactics <> x var
R25272:25275 Basics <> true constr
R25345:25347 Coq.Init.Logic <> :type_scope:x_'='_x not
R25345:25347 Coq.Init.Logic <> :type_scope:x_'='_x not
R25360:25371 Tactics <> beq_nat_true thm
R25360:25371 Tactics <> beq_nat_true thm
prf 25529:25548 <> nth_error_after_last
R25563:25565 Coq.Init.Datatypes <> nat ind
R25584:25587 Poly <> list ind
R25589:25589 Tactics <> X var
R25632:25634 Coq.Init.Logic <> :type_scope:x_'='_x not
R25619:25627 Poly <> nth_error def
R25631:25631 Tactics <> n var
R25629:25629 Tactics <> l var
R25635:25638 Poly <> None constr
R25606:25608 Coq.Init.Logic <> :type_scope:x_'='_x not
R25598:25603 Poly <> length def
R25605:25605 Tactics <> l var
R25609:25609 Tactics <> n var
prf 26024:26038 <> app_length_cons
R26069:26072 Poly <> list ind
R26074:26074 Tactics <> X var
R26116:26116 Tactics <> X var
R26124:26126 Coq.Init.Datatypes <> nat ind
R26193:26195 Coq.Init.Logic <> :type_scope:x_'='_x not
R26172:26172 Coq.Init.Datatypes <> S constr
R26175:26180 Poly <> length def
R26185:26188 Poly <> ::x_'++'_x not
R26183:26184 Tactics <> l1 var
R26189:26190 Tactics <> l2 var
R26196:26196 Tactics <> n var
R26159:26161 Coq.Init.Logic <> :type_scope:x_'='_x not
R26135:26140 Poly <> length def
R26145:26149 Poly <> ::x_'++'_x not
R26157:26157 Poly <> ::x_'++'_x not
R26143:26144 Tactics <> l1 var
R26151:26154 Poly <> ::x_'::'_x not
R26150:26150 Tactics <> x var
R26155:26156 Tactics <> l2 var
R26162:26162 Tactics <> n var
prf 26639:26654 <> app_length_twice
R26677:26679 Coq.Init.Datatypes <> nat ind
R26685:26688 Poly <> list ind
R26690:26690 Tactics <> X var
R26735:26737 Coq.Init.Logic <> :type_scope:x_'='_x not
R26720:26725 Poly <> length def
R26729:26732 Poly <> ::x_'++'_x not
R26728:26728 Tactics <> l var
R26733:26733 Tactics <> l var
R26739:26741 Basics <> :nat_scope:x_'+'_x not
R26738:26738 Tactics <> n var
R26742:26742 Tactics <> n var
R26707:26709 Coq.Init.Logic <> :type_scope:x_'='_x not
R26699:26704 Poly <> length def
R26706:26706 Tactics <> l var
R26710:26710 Tactics <> n var
prf 27113:27128 <> double_induction
R27150:27152 Coq.Init.Datatypes <> nat ind
R27143:27145 Coq.Init.Datatypes <> nat ind
R27303:27303 Tactics <> P var
R27307:27307 Tactics <> n var
R27305:27305 Tactics <> m var
R27271:27271 Tactics <> P var
R27280:27280 Coq.Init.Datatypes <> S constr
R27282:27282 Tactics <> n var
R27274:27274 Coq.Init.Datatypes <> S constr
R27276:27276 Tactics <> m var
R27262:27262 Tactics <> P var
R27266:27266 Tactics <> n var
R27264:27264 Tactics <> m var
R27233:27233 Tactics <> P var
R27238:27238 Coq.Init.Datatypes <> S constr
R27240:27240 Tactics <> n var
R27224:27224 Tactics <> P var
R27228:27228 Tactics <> n var
R27197:27197 Tactics <> P var
R27200:27200 Coq.Init.Datatypes <> S constr
R27202:27202 Tactics <> m var
R27188:27188 Tactics <> P var
R27190:27190 Tactics <> m var
R27166:27166 Tactics <> P var
def 27778:27783 <> square
R27791:27793 Basics <> :nat_scope:x_'*'_x not
R27790:27790 Tactics <> n var
R27794:27794 Tactics <> n var
prf 27865:27875 <> square_mult
R27905:27907 Coq.Init.Logic <> :type_scope:x_'='_x not
R27891:27896 Tactics <> square def
R27900:27902 Basics <> :nat_scope:x_'*'_x not
R27899:27899 Tactics <> n var
R27903:27903 Tactics <> m var
R27916:27918 Basics <> :nat_scope:x_'*'_x not
R27908:27913 Tactics <> square def
R27915:27915 Tactics <> n var
R27919:27924 Tactics <> square def
R27926:27926 Tactics <> m var
R28243:28248 Tactics <> square def
R28575:28584 Induction <> mult_assoc thm
R28575:28584 Induction <> mult_assoc thm
R28600:28609 Induction <> mult_assoc thm
R28600:28609 Induction <> mult_assoc thm
R28633:28641 Induction <> mult_comm thm
R28633:28641 Induction <> mult_comm thm
R28663:28672 Induction <> mult_assoc thm
R28663:28672 Induction <> mult_assoc thm
R28703:28705 Basics <> :nat_scope:x_'*'_x not
R28685:28694 Induction <> mult_assoc thm
R28703:28705 Basics <> :nat_scope:x_'*'_x not
R28685:28694 Induction <> mult_assoc thm
def 29097:29099 <> foo
R29105:29107 Coq.Init.Datatypes <> nat ind
prf 29320:29331 <> silly_fact_1
R29354:29356 Coq.Init.Logic <> :type_scope:x_'='_x not
R29350:29352 Basics <> :nat_scope:x_'+'_x not
R29345:29347 Tactics <> foo def
R29349:29349 Tactics <> m var
R29368:29370 Basics <> :nat_scope:x_'+'_x not
R29357:29359 Tactics <> foo def
R29363:29365 Basics <> :nat_scope:x_'+'_x not
R29362:29362 Tactics <> m var
def 29601:29603 <> bar
R29618:29618 Tactics <> x var
R29629:29629 Coq.Init.Datatypes <> O constr
R29640:29640 Coq.Init.Datatypes <> S constr
prf 29714:29732 <> silly_fact_2_FAILED
R29755:29757 Coq.Init.Logic <> :type_scope:x_'='_x not
R29751:29753 Basics <> :nat_scope:x_'+'_x not
R29746:29748 Tactics <> bar def
R29750:29750 Tactics <> m var
R29769:29771 Basics <> :nat_scope:x_'+'_x not
R29758:29760 Tactics <> bar def
R29764:29766 Basics <> :nat_scope:x_'+'_x not
R29763:29763 Tactics <> m var
prf 30760:30771 <> silly_fact_2
R30794:30796 Coq.Init.Logic <> :type_scope:x_'='_x not
R30790:30792 Basics <> :nat_scope:x_'+'_x not
R30785:30787 Tactics <> bar def
R30789:30789 Tactics <> m var
R30808:30810 Basics <> :nat_scope:x_'+'_x not
R30797:30799 Tactics <> bar def
R30803:30805 Basics <> :nat_scope:x_'+'_x not
R30802:30802 Tactics <> m var
prf 31161:31173 <> silly_fact_2'
R31196:31198 Coq.Init.Logic <> :type_scope:x_'='_x not
R31192:31194 Basics <> :nat_scope:x_'+'_x not
R31187:31189 Tactics <> bar def
R31191:31191 Tactics <> m var
R31210:31212 Basics <> :nat_scope:x_'+'_x not
R31199:31201 Tactics <> bar def
R31205:31207 Basics <> :nat_scope:x_'+'_x not
R31204:31204 Tactics <> m var
R31244:31246 Tactics <> bar def
def 31890:31897 <> sillyfun
R31904:31906 Coq.Init.Datatypes <> nat ind
R31911:31914 Basics <> bool ind
R31924:31930 Basics <> beq_nat def
R31932:31932 Tactics <> n var
R31957:31963 Basics <> beq_nat def
R31965:31965 Tactics <> n var
R31987:31991 Basics <> false constr
R31974:31978 Basics <> false constr
R31941:31945 Basics <> false constr
prf 32003:32016 <> sillyfun_false
R32032:32034 Coq.Init.Datatypes <> nat ind
R32050:32052 Coq.Init.Logic <> :type_scope:x_'='_x not
R32040:32047 Tactics <> sillyfun def
R32049:32049 Tactics <> n var
R32053:32057 Basics <> false constr
R32086:32093 Tactics <> sillyfun def
R32108:32114 Basics <> beq_nat def
R32108:32114 Basics <> beq_nat def
R32208:32214 Basics <> beq_nat def
R32208:32214 Basics <> beq_nat def
prf 33013:33025 <> combine_split
R33045:33048 Poly <> list ind
R33052:33054 Poly <> :type_scope:x_'*'_x not
R33051:33051 Tactics <> X var
R33055:33055 Tactics <> Y var
R33105:33107 Coq.Init.Logic <> :type_scope:x_'='_x not
R33092:33098 Poly <> combine def
R33103:33104 Tactics <> l2 var
R33100:33101 Tactics <> l1 var
R33108:33108 Tactics <> l var
R33075:33077 Coq.Init.Logic <> :type_scope:x_'='_x not
R33068:33072 Poly <> split def
R33074:33074 Tactics <> l var
R33078:33078 Poly <> ::'('_x_','_x_')' not
R33081:33082 Poly <> ::'('_x_','_x_')' not
R33085:33085 Poly <> ::'('_x_','_x_')' not
R33079:33080 Tactics <> l1 var
R33083:33084 Tactics <> l2 var
R33228:33232 Poly <> split def
R33228:33232 Poly <> split def
R33296:33298 Coq.Init.Logic <> :type_scope:x_'='_x not
R33281:33287 Poly <> combine def
R33296:33298 Coq.Init.Logic <> :type_scope:x_'='_x not
R33281:33287 Poly <> combine def
R33342:33348 Poly <> combine def
R33358:33364 Poly <> combine def
def 33669:33677 <> sillyfun1
R33684:33686 Coq.Init.Datatypes <> nat ind
R33691:33694 Basics <> bool ind
R33704:33710 Basics <> beq_nat def
R33712:33712 Tactics <> n var
R33736:33742 Basics <> beq_nat def
R33744:33744 Tactics <> n var
R33765:33769 Basics <> false constr
R33753:33756 Basics <> true constr
R33721:33724 Basics <> true constr
prf 34028:34047 <> sillyfun1_odd_FAILED
R34063:34065 Coq.Init.Datatypes <> nat ind
R34107:34109 Coq.Init.Logic <> :type_scope:x_'='_x not
R34101:34104 Basics <> oddb def
R34106:34106 Tactics <> n var
R34110:34113 Basics <> true constr
R34085:34087 Coq.Init.Logic <> :type_scope:x_'='_x not
R34074:34082 Tactics <> sillyfun1 def
R34084:34084 Tactics <> n var
R34088:34091 Basics <> true constr
R34145:34153 Tactics <> sillyfun1 def
R34174:34180 Basics <> beq_nat def
R34174:34180 Basics <> beq_nat def
prf 35030:35042 <> sillyfun1_odd
R35058:35060 Coq.Init.Datatypes <> nat ind
R35102:35104 Coq.Init.Logic <> :type_scope:x_'='_x not
R35096:35099 Basics <> oddb def
R35101:35101 Tactics <> n var
R35105:35108 Basics <> true constr
R35080:35082 Coq.Init.Logic <> :type_scope:x_'='_x not
R35069:35077 Tactics <> sillyfun1 def
R35079:35079 Tactics <> n var
R35083:35086 Basics <> true constr
R35140:35148 Tactics <> sillyfun1 def
R35169:35175 Basics <> beq_nat def
R35169:35175 Basics <> beq_nat def
R35424:35435 Tactics <> beq_nat_true thm
R35424:35435 Tactics <> beq_nat_true thm
R35722:35728 Basics <> beq_nat def
R35722:35728 Basics <> beq_nat def
R35788:35799 Tactics <> beq_nat_true thm
R35788:35799 Tactics <> beq_nat_true thm
prf 35963:35984 <> bool_fn_applied_thrice
R36010:36013 Basics <> bool ind
R36002:36005 Basics <> bool ind
R36021:36024 Basics <> bool ind
R36041:36043 Coq.Init.Logic <> :type_scope:x_'='_x not
R36030:36030 Tactics <> f var
R36033:36033 Tactics <> f var
R36036:36036 Tactics <> f var
R36038:36038 Tactics <> b var
R36044:36044 Tactics <> f var
R36046:36046 Tactics <> b var
R36096:36099 Basics <> true constr
R36096:36099 Basics <> true constr
R36199:36203 Basics <> false constr
R36199:36203 Basics <> false constr
R36339:36343 Basics <> false constr
R36339:36343 Basics <> false constr
R36372:36375 Basics <> true constr
R36372:36375 Basics <> true constr
prf 38707:38717 <> beq_nat_sym
R38735:38737 Coq.Init.Datatypes <> nat ind
R38754:38756 Coq.Init.Logic <> :type_scope:x_'='_x not
R38743:38749 Basics <> beq_nat def
R38753:38753 Tactics <> m var
R38751:38751 Tactics <> n var
R38757:38763 Basics <> beq_nat def
R38767:38767 Tactics <> n var
R38765:38765 Tactics <> m var
prf 39220:39229 <> beq_nat_eq
R39269:39271 Coq.Init.Logic <> :type_scope:x_'='_x not
R39268:39268 Tactics <> n var
R39272:39272 Tactics <> m var
R39257:39259 Coq.Init.Logic <> :type_scope:x_'='_x not
R39246:39252 Basics <> beq_nat def
R39256:39256 Tactics <> m var
R39254:39254 Tactics <> n var
R39260:39263 Basics <> true constr
prf 39531:39543 <> beq_nat_trans
R39622:39624 Coq.Init.Logic <> :type_scope:x_'='_x not
R39611:39617 Basics <> beq_nat def
R39621:39621 Tactics <> p var
R39619:39619 Tactics <> n var
R39625:39628 Basics <> true constr
R39598:39600 Coq.Init.Logic <> :type_scope:x_'='_x not
R39587:39593 Basics <> beq_nat def
R39597:39597 Tactics <> p var
R39595:39595 Tactics <> m var
R39601:39604 Basics <> true constr
R39574:39576 Coq.Init.Logic <> :type_scope:x_'='_x not
R39563:39569 Basics <> beq_nat def
R39573:39573 Tactics <> m var
R39571:39571 Tactics <> n var
R39577:39580 Basics <> true constr
R39654:39663 Tactics <> beq_nat_eq thm
R39654:39663 Tactics <> beq_nat_eq thm
R39677:39686 Tactics <> beq_nat_eq thm
R39677:39686 Tactics <> beq_nat_eq thm
R39742:39753 Induction <> beq_nat_refl thm
R39742:39753 Induction <> beq_nat_refl thm
def 40467:40489 <> split_combine_statement
R40517:40520 Poly <> list ind
R40524:40526 Poly <> :type_scope:x_'*'_x not
R40523:40523 Tactics <> X var
R40527:40527 Tactics <> Y var
R40595:40597 Coq.Init.Logic <> :type_scope:x_'='_x not
R40588:40592 Poly <> split def
R40594:40594 Tactics <> l var
R40598:40598 Poly <> ::'('_x_','_x_')' not
R40601:40602 Poly <> ::'('_x_','_x_')' not
R40605:40605 Poly <> ::'('_x_','_x_')' not
R40599:40600 Tactics <> l1 var
R40603:40604 Tactics <> l2 var
R40580:40582 Coq.Init.Logic <> :type_scope:x_'='_x not
R40567:40573 Poly <> combine def
R40578:40579 Tactics <> l2 var
R40575:40576 Tactics <> l1 var
R40583:40583 Tactics <> l var
R40549:40551 Coq.Init.Logic <> :type_scope:x_'='_x not
R40540:40545 Poly <> length def
R40547:40548 Tactics <> l1 var
R40552:40557 Poly <> length def
R40559:40560 Tactics <> l2 var
prf 40617:40629 <> split_combine
R40633:40655 Tactics <> split_combine_statement def
R40674:40696 Tactics <> split_combine_statement def
prf 41333:41347 <> filter_exercise
R41382:41385 Basics <> bool ind
R41377:41377 Tactics <> X var
R41422:41422 Tactics <> X var
R41433:41436 Poly <> list ind
R41438:41438 Tactics <> X var
R41485:41487 Coq.Init.Logic <> :type_scope:x_'='_x not
R41479:41482 Tactics <> test var
R41484:41484 Tactics <> x var
R41488:41491 Basics <> true constr
R41460:41462 Coq.Init.Logic <> :type_scope:x_'='_x not
R41447:41452 Poly <> filter def
R41459:41459 Tactics <> l var
R41454:41457 Tactics <> test var
R41464:41467 Poly <> ::x_'::'_x not
R41463:41463 Tactics <> x var
R41468:41469 Tactics <> lf var
def 42593:42599 <> forallb
R42614:42617 Basics <> bool ind
R42609:42609 Tactics <> X var
R42625:42628 Poly <> list ind
R42630:42630 Tactics <> X var
R42644:42644 Tactics <> l var
R42655:42656 Poly <> ::'['_']' not
R42661:42664 Basics <> true constr
R42671:42674 Poly <> ::x_'::'_x not
R42683:42683 Basics <> ::x_'&&'_x not
R42687:42692 Basics <> ::x_'&&'_x not
R42707:42707 Basics <> ::x_'&&'_x not
R42684:42684 Tactics <> f var
R42693:42699 Tactics <> forallb def
R42701:42701 Tactics <> f var
def 42726:42732 <> existsb
R42747:42750 Basics <> bool ind
R42742:42742 Tactics <> X var
R42758:42761 Poly <> list ind
R42763:42763 Tactics <> X var
R42777:42777 Tactics <> l var
R42788:42789 Poly <> ::'['_']' not
R42794:42798 Basics <> false constr
R42805:42808 Poly <> ::x_'::'_x not
R42817:42817 Basics <> ::x_'||'_x not
R42821:42826 Basics <> ::x_'||'_x not
R42841:42841 Basics <> ::x_'||'_x not
R42818:42818 Tactics <> f var
R42827:42833 Tactics <> existsb def
R42835:42835 Tactics <> f var
R42882:42885 Basics <> bool ind
R42877:42877 Tactics <> X var
R42893:42896 Poly <> list ind
R42898:42898 Tactics <> X var
R42906:42909 Basics <> negb def
R42912:42918 Tactics <> forallb def
R42942:42942 Tactics <> l var
R42930:42933 Basics <> negb def
R42936:42936 Tactics <> f var
R42938:42938 Tactics <> x var
R0:-1 Tactics <> X var
R0:-1 Tactics <> X var
R0:-1 Tactics <> X var
R0:-1 Tactics <> X var
R42906:42909 Basics <> negb def
R42912:42918 Tactics <> forallb def
R42942:42942 Tactics <> l var
R42930:42933 Basics <> negb def
R42936:42936 Tactics <> f var
R42938:42938 Tactics <> x var
R0:-1 Tactics <> X var
R0:-1 Tactics <> X var
R42906:42909 Basics <> negb def
R42912:42918 Tactics <> forallb def
R42942:42942 Tactics <> l var
R42930:42933 Basics <> negb def
R42936:42936 Tactics <> f var
R42938:42938 Tactics <> x var
prf 42955:42970 <> existsb_existsb'
R42992:42995 Basics <> bool ind
R42987:42987 Tactics <> X var
R43012:43014 Coq.Init.Logic <> :type_scope:x_'='_x not
R43001:43007 Tactics <> existsb def
R43011:43011 Tactics <> l var
R43009:43009 Tactics <> f var
R43015:43022 Tactics <> existsb' def
R43026:43026 Tactics <> l var
R43024:43024 Tactics <> f var
R43086:43093 Tactics <> existsb' def
R43148:43150 Coq.Init.Logic <> :type_scope:x_'='_x not
R43130:43133 Basics <> negb def
R43142:43145 Basics <> ::x_'&&'_x not
R43136:43139 Basics <> negb def
R43141:43141 Tactics <> p var
R43146:43146 Tactics <> q var
R43152:43155 Basics <> ::x_'||'_x not
R43151:43151 Tactics <> p var
R43156:43159 Basics <> negb def
R43161:43161 Tactics <> q var
R43148:43150 Coq.Init.Logic <> :type_scope:x_'='_x not
R43130:43133 Basics <> negb def
R43142:43145 Basics <> ::x_'&&'_x not
R43136:43139 Basics <> negb def
R43141:43141 Tactics <> p var
R43146:43146 Tactics <> q var
R43152:43155 Basics <> ::x_'||'_x not
R43151:43151 Tactics <> p var
R43156:43159 Basics <> negb def
R43161:43161 Tactics <> q var
